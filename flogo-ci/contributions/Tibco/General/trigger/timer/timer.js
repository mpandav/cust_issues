"use strict";var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),__decorate=this&&this.__decorate||function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),wi_contrib_1=require("wi-studio/app/contrib/wi-contrib"),validation_1=require("wi-studio/common/models/validation"),TimerTriggerService=function(e){function t(){var t=e.call(this)||this;return t.value=function(e,t){if("Cron Expression"===e&&""===t.getField("Cron Expression").value)return"CRON_TZ="+Intl.DateTimeFormat().resolvedOptions().timeZone+" * * * * *";return null},t.validate=function(e,t){var i=t.getField("Scheduler Options");return"Cron Expression"===e?"Cron Job"===i.value?validation_1.ValidationResult.newValidationResult().setVisible(!0):validation_1.ValidationResult.newValidationResult().setVisible(!1):"Repeating"===e||"Start Time"===e?"Cron Job"===i.value?validation_1.ValidationResult.newValidationResult().setVisible(!1):validation_1.ValidationResult.newValidationResult().setVisible(!0):"Time Interval"===e||"Interval Unit"===e||"Delayed Start"===e?!1===t.getField("Repeating").value?validation_1.ValidationResult.newValidationResult().setVisible(!1):"Cron Job"===i.value?validation_1.ValidationResult.newValidationResult().setVisible(!1):"Time Interval"===e&&t.getField("Time Interval").value<=0?validation_1.ValidationResult.newValidationResult().setVisible(!0).setError("GENERAL-TIMER-1000","Interval value must be a positive number and must be greater than zero"):validation_1.ValidationResult.newValidationResult().setVisible(!0):null},t}return __extends(t,e),t}(wi_contrib_1.WiServiceHandlerContribution);TimerTriggerService=__decorate([core_1.Injectable(),wi_contrib_1.WiContrib({}),__metadata("design:paramtypes",[])],TimerTriggerService),exports.TimerTriggerService=TimerTriggerService;
//# sourceMappingURL=timer.js.map
