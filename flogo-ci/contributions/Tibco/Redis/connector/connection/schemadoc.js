"use strict";var JsonSchema;Object.defineProperty(exports,"__esModule",{value:!0}),function(e){var n=function(){return function(){}}();n.schemaDoc=function(){return'{\n            "command_groups": ["Strings", "Lists", "Sets", "SortedSets", "Hashes","JSON"],\n            "commands": {\n                "/Strings/APPEND": {\n                    "summary": "Append a value to a list, only if the list exists",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/GET": {\n                    "summary": "Get the value of a key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/GETSET": {\n                    "summary": "sets key to value and returns the old value stored at key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/STRLEN": {\n                    "summary": "Get the length of the value stored in a key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/GETRANGE": {\n                    "summary": "gives substring of the string value stored at key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "start": {\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "end": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/SETRANGE": {\n                    "summary": "Set the string value of a key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "offset": {\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\t\t\t\t\t\t\n                            },\n                            "required": ["key", "offset", "value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/MGET": {\n                    "summary": "Returns the values of all specified keys",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keys": {\n                                    "required": true,\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["keys"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "keyvalues": {\n                                    "$id": "#/properties/keyvalues", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/keyvalues/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "key": {\n                                                "$id": "#/properties/keyvalues/items/properties/key", \n                                                "type": "string"\n                                            }, \n                                            "value": {\n                                                "$id": "#/properties/keyvalues/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/SET": {\n                    "summary": "Set the string value of a key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "EX": {\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "PX": {\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "NX|XX": {\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/MSET": {\n                    "summary": "Set multiple keys to multiple values",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keyvalues": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            },\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["keyvalues"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/GETDEL": {\n                    "summary": "Get the value of a key and Delete the Key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/INCR": {\n                    "summary": "Increment Value at key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/DECR": {\n                    "summary": "Decrement Value at key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/INCRBY": {\n                    "summary": "Increments the number stored at key by increment",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "increment": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key","increment"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/DECRBY": {\n                    "summary": "Decrements the number stored at key by decrement",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "decrement": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key","decrement"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/INCRBYFLOAT": {\n                    "summary": "Increment the string representing a floating point number stored at key by the specified increment",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "increment": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key","increment"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/MSETNX": {\n                    "summary": "Set multiple keys to multiple values. Will not work even if just a single key already exists",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keyvalues": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            },\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["keyvalues"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        1\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/GETEX": {\n                    "summary": "Get the value of key and optionally set its expiration.",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "EX|PX|EXAT|PXAT": {\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "time": {\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/SETNX": {\n                    "summary": "Set key to hold string value if key does not exist",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        1\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/SETEX": {\n                    "summary": "Set key to hold the string value and set key to timeout after a given number of seconds",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "seconds": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key", "value","seconds"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Strings/PSETEX": {\n                    "summary": "Set key to hold the string value and set key to timeout after a given number ofmilliseconds",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "milliseconds": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key", "value","milliseconds"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LPUSH": {\n                    "summary": "Prepend one or multiple values to a list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "values": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "values"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        3\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Lists/RPUSH": {\n                    "summary": " Append one or multiple values to a list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "values": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "values"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        3\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Lists/LPOP": {\n                    "summary": "Remove and get elements from beginning of list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "count":{\n                                    "type": "integer",\n                                    "default":1\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "values": {\n                                    "$id": "#/properties/values", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/values/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "value": {\n                                                "$id": "#/properties/values/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Lists/RPOP": {\n                    "summary": "Remove and get elements from end of list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "count":{\n                                    "type": "integer",\n                                    "default":1\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "values": {\n                                    "$id": "#/properties/values", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/values/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "value": {\n                                                "$id": "#/properties/values/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LINDEX": {\n                    "summary": " Get an element from a list by its index",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "index": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key","index"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LSET": {\n                    "summary": " Set the value of an element in a list by its index",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "index": {\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key","index","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LREM": {\n                    "summary": " Remove elements from a list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "count": {\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key","count","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        2\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LINSERT": {\n                    "summary": "Insert an element before or after another element in a list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "BEFORE|AFTER": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "pivot": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key","BEFORE|AFTER","pivot","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        2\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LRANGE": {\n                    "summary": "Get a range of elements from a list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "start": {\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "stop": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key", "start", "stop"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "values": {\n                                    "$id": "#/properties/values", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/values/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "value": {\n                                                "$id": "#/properties/values/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LPUSHX": {\n                    "summary": "Inserts specified values at the head of the list stored at key, only if key already exists and holds a list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "values": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "values"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        3\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Lists/RPUSHX": {\n                    "summary": "Inserts specified values at the tail of the list stored at key, only if key already exists and holds a list",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "values": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "values"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        3\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Lists/BLPOP": {\n                    "summary": "The blocking version of LPOP where it pop element from non-empty list and blocks the connection if list is empty",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "timeout": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["keys", "timeout"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "elements": {\n                                    "$id": "#/properties/elements", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/elements/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "element": {\n                                                "$id": "#/properties/elements/items/properties/element", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Lists/BRPOP": {\n                    "summary": "The blocking version of RPOP where it pop element from non-empty list and blocks the connection if list is empty",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "timeout": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["keys", "timeout"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "elements": {\n                                    "$id": "#/properties/elements", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/elements/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "element": {\n                                                "$id": "#/properties/elements/items/properties/element", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Lists/LLEN": {\n                    "summary": " Returns the length of the list stored at key.",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        2\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LMOVE": {\n                    "summary": "Move the element from source list to destination list.",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "SourceList": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "DestinationList": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "SrcPos LEFT|RIGHT": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "DestPos LEFT|RIGHT": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["SourceList", "DestinationList","SrcPos LEFT|RIGHT","DestPos LEFT|RIGHT"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/BLMOVE": {\n                    "summary": "blocking variant of LMOVE,When source is empty, Redis will block the connection until another client pushes to it or until timeout",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "SourceList": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "DestinationList": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "SrcPos LEFT|RIGHT": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "DestPos LEFT|RIGHT": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "timeout": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["SourceList", "DestinationList","SrcPos LEFT|RIGHT","DestPos LEFT|RIGHT","timeout"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LPOS": {\n                    "summary": "gives index of matching element",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "count": {\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "rank": {\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "maxlen": {\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key","value"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "indexes": {\n                                    "$id": "#/properties/indexes", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/indexes/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "index": {\n                                                "$id": "#/properties/indexes/items/properties/index", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/LTRIM": {\n                    "summary": "Trim an existing list so that it will contain only the specified range of elements specified",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "start": {\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "stop": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key", "start", "stop"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "ok"\n                                        \n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/RPOPLPUSH": {\n                    "summary": "Atomically returns and removes the last element (tail) of the list stored at source, and pushes the element at the first element (head) of the list stored at destination.",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "SourceList": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "DestinationList": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["SourceList", "DestinationList"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Lists/BRPOPLPUSH": {\n                    "summary": " is the blocking variant of RPOPLPUSH, When source is empty, Redis will block the connection until another client pushes to it or until timeout is reached",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "SourceList": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "DestinationList": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "timeout": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                                \n                            },\n                            "required": ["SourceList","DestinationList","timeout"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SADD": {\n                    "summary": "Add values to a set apart from the ones that exist",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "members": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "member": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "members"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n        \n                    }\n                    \n                },\n                "/Sets/SCARD": {\n                    "summary": "Get the number of members in a set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        0\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Sets/SREM": {\n                    "summary": "Remove one or more members from a set",\n                    "schema":{\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "members": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "member": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "members"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Sets/SMEMBERS": {\n                    "summary": "Get all the members in a set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                }\n                            },\n                            "required":["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SPOP": {\n                    "summary":"Remove and return one or multiple random members from a set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/Sets/SMOVE":{\n                    "summary":"Move a member from one set to another",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "source":{\n                                    "type": "string",\n                                    "required":true\n                                },\n                                "destination":{\n                                    "type": "string",\n                                    "required":true\n                                },\n                                "member": {\n                                    "type": "string",\n                                    "required":true\n                                }\n                            },\n                            "required": ["source", "destination", "member"]\n                        },\n                        "output":{\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema "\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SISMEMBER":{\n                    "summary": "Determine if a given value is a member of a set",\n                    "schema":{\n                        "parameters":{\n                            "type": "object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "member":{\n                                    "required":true,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key", "member"]\n                        },\n                        "output":{\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema "\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SDIFF": {\n                    "summary": "Returns the members of the set resulting from the difference between the first set and all the successive sets.",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required":["keys"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SDIFFSTORE":{\n                    "summary":"Store the difference between the first set and all the successive sets in destination set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "destination":{\n                                    "type": "string",\n                                    "required":true\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["destination", "keys"]\n                        },\n                        "output":{\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SINTER": {\n                    "summary": "Returns the members of the set resulting from the intersection of all the given sets.",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required":["keys"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SINTERSTORE":{\n                    "summary":"Store the intersection of all the given sets in destination set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "destination":{\n                                    "type": "string",\n                                    "required":true\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["destination", "keys"]\n                        },\n                        "output":{\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SUNION": {\n                    "summary": "Returns the members of the set resulting from the union of all the given sets.",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required":["keys"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SUNIONSTORE":{\n                    "summary":"Store the union of all the given sets in destination set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "destination":{\n                                    "type": "string",\n                                    "required":true\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["destination", "keys"]\n                        },\n                        "output":{\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SMISMEMBER": {\n                    "summary": "Returns whether each member is a member of the set stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "type": "string",\n                                    "required":true\n                                },\n                                "members": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "member": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required":["key","members"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SRANDMEMBER": {\n                    "summary": "Get random elements from the set values stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "count":{\n                                    "required":false,\n                                    "type":"integer"\n                                }\n                            },\n                            "required":["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Sets/SSCAN": {\n                    "summary": " iterates elements of Sets types",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "cursor":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "match":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "count":{\n                                    "required":false,\n                                    "type":"integer"\n                                }\n                            },\n                            "required":["key","cursor"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "cursor": {\n                                    "$id": "#/properties/cursor", \n                                    "type": "integer"\n                                }, \n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZADD": {\n                    "summary": "Add one or more members to a sorted set, or update its score if it already exists",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "memberswithscores": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "member": {\n                                                "required": true,\n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "required": true,\n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                },\n                                "NX|XX":{\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "LT|GT":{\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "CH":{\n                                    "required": false,\n                                    "type": "boolean"\n                                },\n                                "INCR":{\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "memberswithscores"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZCARD": {\n                    "summary": "Get the number of members in a sorted set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/SortedSets/ZREM": {\n                    "summary": "Remove one or more members from a sorted set",\n                    "schema":{\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "members": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "member": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "members"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/SortedSets/ZRANGE": {\n                    "summary": "Get all the members in a set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "start":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "stop":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "REV": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "BYLEX": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "BYSCORE": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "offset":{\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required":["key", "start", "stop"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZCOUNT": {\n                    "summary":"Count the members in a sorted set with scores within the given values",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "min":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "max":{\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "min", "max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result":{\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/SortedSets/ZRANK": {\n                    "summary":"Determine the index of a member in a sorted set",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "member":{\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "member"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result":{\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/SortedSets/ZREMRANGEBYRANK": {\n                    "summary": "Remove all members in a sorted set within the given indexes",\n                    "schema":{\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "start":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "stop":{\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key", "start", "stop"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/SortedSets/ZREMRANGEBYSCORE": {\n                    "summary": "Remove all members in a sorted set within the given scores",\n                    "schema":{\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "min":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "max":{\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "min", "max"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/SortedSets/ZSCORE": {\n                    "summary": "Returns the score of member in the sorted set at key",\n                    "schema":{\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "member":{\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "member"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema "\n                                }\n                            }\n                        }\n                    }\n        \n                },\n                "/SortedSets/ZUNIONSTORE": {\n                    "summary": "Computes the union of sorted sets given by the specified keys, and stores the result in destination",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "destination":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "numkeys":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "weights": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "weight": {\n                                                "required": false,\n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                },\n                                "AGGREGATE SUM|MIN|MAX":{\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["destination", "numkeys", "keys"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZUNION": {\n                    "summary": "Computes the union of sorted sets given by the specified keys and print the result",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "numkeys":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "weights": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "weight": {\n                                                "required": false,\n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                },\n                                "AGGREGATE SUM|MIN|MAX":{\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                }\n                            },\n                            "required":["numkeys", "keys"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZPOPMAX": {\n                    "summary": "Removes and returns up to count members with the highest scores in the sorted set stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required":["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZPOPMIN": {\n                    "summary": "Removes and returns up to count members with the lowest scores in the sorted set stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required":["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/BZPOPMAX": {\n                    "summary": "It is the blocking variant of the sorted set ZPOPMAX primitive",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "timeout": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["keys", "timeout"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "elements": {\n                                    "$id": "#/properties/elements", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/elements/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "element": {\n                                                "$id": "#/properties/elements/items/properties/element", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }    \n                },\n                "/SortedSets/BZPOPMIN": {\n                    "summary": "It is the blocking variant of the sorted set ZPOPMIN primitive",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "timeout": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["keys", "timeout"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "elements": {\n                                    "$id": "#/properties/elements", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/elements/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "element": {\n                                                "$id": "#/properties/elements/items/properties/element", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }    \n                },\n                "/SortedSets/ZDIFFSTORE": {\n                    "summary": "Computes the difference between the first and all successive input sorted sets and stores the result in destination",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "destination":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "numkeys":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["destination", "numkeys", "keys"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZDIFF": {\n                    "summary": "Computes the difference between the first and all successive input sorted sets and print the result",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "numkeys":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                }\n                            },\n                            "required":["numkeys", "keys"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZINCRBY": {\n                    "summary": "Increments the score of member in the sorted set stored at key by increment",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "increment":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "member":{\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "increment", "member"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZINTER": {\n                    "summary": "Computes the intersection of sorted sets given by the specified keys and print the result",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "numkeys":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "weights": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "weight": {\n                                                "required": false,\n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                },\n                                "AGGREGATE SUM|MIN|MAX":{\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                }\n                            },\n                            "required":["numkeys", "keys"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZINTERSTORE": {\n                    "summary": "Computes the intersection of sorted sets given by the specified keys, and stores the result in destination",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "destination":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "numkeys":{\n                                    "required": true,\n                                    "type": "integer"\n                                },\n                                "keys": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                },\n                                "weights": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "weight": {\n                                                "required": false,\n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                },\n                                "AGGREGATE SUM|MIN|MAX":{\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["destination", "numkeys", "keys"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZMSCORE": {\n                    "summary": "Returns the scores associated with the specified members in the sorted set stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "members": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "member": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required":["key", "members"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "scores": {\n                                    "$id": "#/properties/scores", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/scores/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "score": {\n                                                "$id": "#/properties/scores/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZRANDMEMBER": {\n                    "summary": "Get random elements from the sorted set values stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "count":{\n                                    "required":false,\n                                    "type":"integer"\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                }\n                            },\n                            "required":["key"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZSCAN": {\n                    "summary": " iterates elements of Sorted Sets types",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "cursor":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "match":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "count":{\n                                    "required":false,\n                                    "type":"integer"\n                                }\n                            },\n                            "required":["key","cursor"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "cursor": {\n                                    "$id": "#/properties/cursor", \n                                    "type": "integer"\n                                }, \n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/score", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HDEL": {\n                    "summery": "Delete one or more hash fields",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "fields": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "field": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key","fields"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HEXISTS": {\n                    "summery": "Determine if a hash field exists",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "field": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key","field"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema "\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HGET": {\n                      "summary": "Get the value of a hash field",\n                      "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "field": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key","field"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "foo"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HGETALL": {\n                    "summary": "Get all the fields and values in a hash",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "fieldvalues": {\n                                    "$id": "#/properties/fieldvalues", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/fieldvalues/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "field": {\n                                                "$id": "#/properties/fieldvalues/items/properties/field", \n                                                "type": "string"\n                                            }, \n                                            "value": {\n                                                "$id": "#/properties/fieldvalues/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HKEYS": {\n                    "summary": "Get all the fields in a hash",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "fields": {\n                                    "$id": "#/properties/fields", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/fields/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "field": {\n                                                "$id": "#/properties/fields/items/properties/field", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HLEN": {\n                    "summary": "Get the number of fields in a hash",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HMGET": {\n                    "summary": "Get the values of all the given hash fields",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "fields": {\n                                    "required": true,\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "field": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "fields"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "$id": "#/properties/keyvalues/items/properties/field", \n                                    "type": "string"\n                                }, \n                                "fieldvalues": {\n                                    "$id": "#/properties/fieldvalues", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/fieldvalues/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "field": {\n                                                "$id": "#/properties/fieldvalues/items/properties/field", \n                                                "type": "string"\n                                            }, \n                                            "value": {\n                                                "$id": "#/properties/fieldvalues/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                  "/Hashes/HMSET": {\n                    "summary": "Set multiple hash fields to multiple values",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "fieldvalues": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "field": {\n                                                "required": true,\n                                                "type": "string"\n                                            },\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "fieldvalues"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "ok"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HSET": {\n                    "summary": "Set the string value of a hash field",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "fieldvalues": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "field": {\n                                                "required": true,\n                                                "type": "string"\n                                            },\n                                            "value": {\n                                                "required": true,\n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["key", "fieldvalues"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema "\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HVALS": {\n                    "summary": "Get all the values in a hash",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "values": {\n                                    "$id": "#/properties/values", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/values/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "value": {\n                                                "$id": "#/properties/values/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HINCRBY": {\n                    "summary": "Increments the number stored at field in the hash stored at key by increment",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "field": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "increment": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key", "field", "increment"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": false,\n                                    "examples": [\n                                        1\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HINCRBYFLOAT": {\n                    "summary": "Increment the specified field of a hash stored at key, and representing a floating point number, by the specified increment",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "field": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "increment": {\n                                    "required": true,\n                                    "type": "integer"\n                                }\n                            },\n                            "required": ["key", "field", "increment"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema "\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HSCAN": {\n                    "summary": "Incrementally iterate over a collection of elements",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "cursor":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "pattern":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "count": {\n                                    "required":false,\n                                    "type":"integer"\n                                }\n                            },\n                            "required":["key", "cursor"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "fieldvalues": {\n                                    "$id": "#/properties/fieldvalues", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/fieldvalues/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "field": {\n                                                "$id": "#/properties/fieldvalues/items/properties/field", \n                                                "type": "string"\n                                            }, \n                                            "value": {\n                                                "$id": "#/properties/fieldvalues/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HRANDFIELD": {\n                    "summary": "Return a random field from the hash value stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "count":{\n                                    "required":false,\n                                    "type":"integer"\n                                },\n                                "withvalues":{\n                                    "required":false,\n                                    "type":"boolean"\n                                }\n                            },\n                            "required":["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "fieldvalues": {\n                                    "$id": "#/properties/fieldvalues", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/fieldvalues/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "field": {\n                                                "$id": "#/properties/fieldvalues/items/properties/field", \n                                                "type": "string"\n                                            }, \n                                            "value": {\n                                                "$id": "#/properties/fieldvalues/items/properties/value", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/Hashes/HSETNX": {\n                    "summery": "Sets field in the hash stored at key to value only if field does not yet exist",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "field": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "value": {\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key","field","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema "\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZREVRANK": {\n                    "summary":"Returns the rank of member in the sorted set stored at key with the scores ordered from high to low",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "member":{\n                                    "required": true,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "member"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result":{\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZRANGEBYLEX": {\n                    "summary":"Returns all the elements in the sorted set at key with a value between min and max",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "min":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "max":{\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "offset":{\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n\n                            },\n                            "required": ["key", "min", "max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "member": {\n                                        "$id": "#/properties/members/member", \n                                        "type": "object", \n                                        "properties": {\n                                            "field": {\n                                                "$id": "#/properties/members/member/properties/field", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZRANGEBYSCORE": {\n                    "summary": "Returns all the elements in the sorted set at key with a score between min and max",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "min":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "max":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "offset":{\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required":["key", "min", "max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZREVRANGE": {\n                    "summary": "Returns the specified range of elements in the sorted set stored at key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "start":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "stop":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                }\n                            },\n                            "required":["key", "start", "stop"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZREVRANGEBYLEX": {\n                    "summary": "Returns all the elements in the sorted set at key with a value between max and min",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "max":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "min":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "offset":{\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required":["key", "min", "max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZREVRANGEBYSCORE": {\n                    "summary": "Returns all the elements in the sorted set at key with a score between max and min",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "max":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "min":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "WITHSCORES": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "offset":{\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required":["key", "min", "max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties": {\n                                "members": {\n                                    "$id": "#/properties/members", \n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/members/items", \n                                        "type": "object", \n                                        "properties": {\n                                            "member": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "string"\n                                            },\n                                            "score": {\n                                                "$id": "#/properties/members/items/properties/member", \n                                                "type": "integer"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZRANGESTORE": {\n                    "summary": "Stores the result in destination key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "dst":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "src":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "min":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "max":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "byScore": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "byLex": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "rev": {\n                                    "required":false,\n                                    "type":"boolean"\n                                },\n                                "offset":{\n                                    "required": false,\n                                    "type": "integer"\n                                },\n                                "count":{\n                                    "required": false,\n                                    "type": "integer"\n                                }\n                            },\n                            "required":["dst","src","min", "max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result":{\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZREMRANGEBYLEX": {\n                    "summary":"Removes all elements in the sorted set stored at key between the lexicographical range specified by min and max",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "min":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "max":{\n                                    "required":true,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key", "min","max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result":{\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/SortedSets/ZLEXCOUNT": {\n                    "summary":"Returns the number of elements in the sorted set at key with a value between min and max",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "min":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "max":{\n                                    "required":true,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key", "min","max"]\n                        },\n                        "output":{\n                            "type":"object",\n                            "properties":{\n                                "result":{\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": 0,\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.SET": {\n                    "summary":"Set the JSON value at path in key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "value":{\n                                    "required":true,\n                                    "type":"any"\n                                },\n                                "NX|XX":{\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key", "path","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.MSET": {\n                    "summary":"Set or update one or more JSON values according to the specified key-path-value triplets.",\n                    "schema":{\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "keyPathValues": {\n                                    "type": "array",\n                                    "items": {\n                                        "type": "object",\n                                        "properties": {\n                                            "key": {\n                                                "required": true,\n                                                "type": "string"\n                                            },\n                                            "path":{\n                                                "required":true,\n                                                "type":"string"\n                                            },\n                                            "value": {\n                                                "required": true,\n                                                "type": "any"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "required": ["keyPathValues"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.GET": {\n                    "summary": "Get the value of key at path in JSON serialized form",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "indent": {\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "newline": {\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "space": {\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "paths": {\n                                    "required": false,\n                                    "type": "array",\n                                    "items": {\n                                        "type": "string"\n                                    }\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.MGET": {\n                    "summary": "Get the values at path from multiple key arguments",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "path": {\n                                    "required": false,\n                                    "type": "string"\n                                },\n                                "key": {\n                                    "required": true,\n                                    "type": "array",\n                                    "items": {\n                                        "type": "string"\n                                    }\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "value"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.DEL": {\n                    "summery": "Delete a value specified on given key and path ",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "path": {\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.CLEAR": {\n                    "summery": "Clear container values (arrays/objects) and set numeric values to 0",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "path": {\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.TYPE": {\n                    "summery": "Report the type of JSON value at path",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "path": {\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.TOGGLE": {\n                    "summery": "Toggle a Boolean value stored at path",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "path": {\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.STRLEN": {\n                    "summery": "Report the length of the JSON String at path in key",\n                    "schema": {\n                        "parameters": {\n                            "type": "object",\n                            "properties": {\n                                "key": {\n                                    "required": true,\n                                    "type": "string"\n                                },\n                                "path": {\n                                    "required": false,\n                                    "type": "string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "integer",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        5\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.STRAPPEND": {\n                    "summary":"Append the json-string values to the string at path",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "value":{\n                                    "required":true,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.ARRAPPEND": {\n                    "summary":"Append the json values into the array at path after the last element in it",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "value":{\n                                    "required": true,\n                                    "type": "array",\n                                    "items": {}\n                                }\n                            },\n                            "required": ["key","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.ARRINDEX": {\n                    "summary":"Search for the first occurrence of a JSON value in an array",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "value":{\n                                    "required": true,\n                                    "type": "array",\n                                    "items": {}\n                                },\n                                "start":{\n                                    "required":false,\n                                    "type":"integer"\n                                },\n                                "stop":{\n                                    "required":false,\n                                    "type":"integer"\n                                }\n                            },\n                            "required": ["key","value","path"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.ARRINSERT": {\n                    "summary":"Insert the json values into the array at path before the index (shifts to the right)",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "index":{\n                                    "required":true,\n                                    "type":"integer"\n                                },\n                                "value":{\n                                    "required": true,\n                                    "type": "array",\n                                    "items": {}\n                                }\n                            },\n                            "required": ["key","value","index"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.ARRLEN": {\n                    "summary":"Get the length of the JSON array at path in key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.ARRPOP": {\n                    "summary":"Remove and return an element from the index in the array",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "index":{\n                                    "required":true,\n                                    "type":"integer"\n                                }\n                            },\n                            "required": ["key","index"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "string"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.ARRTRIM": {\n                    "summary":"Trim an array so that it contains only the specified inclusive range of elements",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                },\n                                "start":{\n                                    "required":false,\n                                    "type":"integer"\n                                },\n                                "stop":{\n                                    "required":false,\n                                    "type":"integer"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.MERGE": {\n                    "summary":"Merge a given JSON value into matching paths. Consequently, JSON values at matching paths are updated, deleted, or expanded with new children.",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "value":{\n                                    "required":true,\n                                    "type":"any"\n                                }\n                            },\n                            "required": ["key", "path","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "OK"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.NUMINCRBY": {\n                    "summary":"Increment the number value stored at path by number",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "value":{\n                                    "required":true,\n                                    "type":"integer"\n                                }\n                            },\n                            "required": ["key", "path","value"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "string",\n                                    "title": "The Result Schema ",\n                                    "default": "",\n                                    "examples": [\n                                        "json"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.OBJKEYS": {\n                    "summary":"Return the keys in the object that\'s referenced by path",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "/properties/result",\n                                    "type": "array",\n                                    "items": {\n                                        "$id": "#/properties/result/items", \n                                        "type": "array", \n                                        "items": {\n                                            "$id": "#/properties/result/items/items", \n                                            "type": "string"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                "/JSON/JSON.OBJLEN": {\n                    "summary":"Report the number of keys in the JSON object at path in key",\n                    "schema":{\n                        "parameters":{\n                            "type":"object",\n                            "properties":{\n                                "key":{\n                                    "required":true,\n                                    "type":"string"\n                                },\n                                "path":{\n                                    "required":false,\n                                    "type":"string"\n                                }\n                            },\n                            "required": ["key"]\n                        },\n                        "output": {\n                            "type": "object",\n                            "properties": {\n                                "result": {\n                                    "$id": "#/properties/result", \n                                    "type": "array",\n                                    "items": {\n                                        "type": "integer"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }'},e.Types=n}(JsonSchema=exports.JsonSchema||(exports.JsonSchema={}));
//# sourceMappingURL=schemadoc.js.map
