"use strict";var __extends=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),__decorate=this&&this.__decorate||function(t,e,i,n){var r,o=arguments.length,a=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,i,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(a=(o<3?r(a):o>3?r(e,i,a):r(e,i))||a);return o>3&&a&&Object.defineProperty(e,i,a),a},__metadata=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},__param=this&&this.__param||function(t,e){return function(i,n){e(i,n,t)}};Object.defineProperty(exports,"__esModule",{value:!0});var rxjs_extensions_1=require("wi-studio/common/rxjs-extensions"),http_1=require("@angular/http"),core_1=require("@angular/core"),wi_contrib_1=require("wi-studio/app/contrib/wi-contrib"),PublishActivityContribution=function(t){function e(e,i){var n=t.call(this,e,i)||this;return n.http=i,n.outputBytesSchema=!1,n.value=function(t,e){switch(t){case"Connection":return rxjs_extensions_1.Observable.create(function(t){var e=[];wi_contrib_1.WiContributionUtils.getConnections(n.http,"Mqtt").subscribe(function(i){i.forEach(function(t){for(var i=0;i<t.settings.length;i++)if("name"===t.settings[i].name){e.push({unique_id:wi_contrib_1.WiContributionUtils.getUniqueId(t),name:t.settings[i].value});break}}),t.next(e),defaultStatus})});default:return null}},n.validate=function(t,e){var i=e.getField("valueType").value.toString();return"stringValue"===t?wi_contrib_1.ValidationResult.newValidationResult().setVisible("String"===i||"Base64"===i):"jsonValue"===t?wi_contrib_1.ValidationResult.newValidationResult().setVisible("JSON"===i):null},n.messaging=new wi_contrib_1.WiContribMessaging,n.cachedFields={},n.category="Mqtt",n}return __extends(e,t),e.prototype.getContextVar=function(t,e){return t.getField(e)?t.getField(e).value:""},e}(wi_contrib_1.WiServiceHandlerContribution);PublishActivityContribution=__decorate([core_1.Injectable(),wi_contrib_1.WiContrib({}),core_1.Injectable(),__param(0,core_1.Inject(core_1.Injector)),__metadata("design:paramtypes",[Object,http_1.Http])],PublishActivityContribution),exports.PublishActivityContribution=PublishActivityContribution;
//# sourceMappingURL=activity.js.map
