"use strict";var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])};return function(r,t){function i(){this.constructor=r}e(r,t),r.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}}(),__decorate=this&&this.__decorate||function(e,r,t,i){var n,a=arguments.length,s=a<3?r:null===i?i=Object.getOwnPropertyDescriptor(r,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,r,t,i);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(s=(a<3?n(s):a>3?n(r,t,s):n(r,t))||s);return a>3&&s&&Object.defineProperty(r,t,s),s},__metadata=this&&this.__metadata||function(e,r){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,r)};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),http_1=require("@angular/http"),Observable_1=require("rxjs/Observable"),wi_contrib_1=require("wi-studio/app/contrib/wi-contrib"),lodash=require("lodash"),KinesisErrorConfiguration={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{error_code:{type:"string",required:"false"},error_message:{type:"string",required:"false"},requestId:{type:"string",required:"false"},statusCode:{type:"string",required:"false"}}},CreateDataStreamSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{StreamName:{type:"string",description:"Name of Data Stream to be created",required:"true"},ShardCount:{type:"integer",description:"Number of Shards in this Stream",required:"true"}},required:["StreamName","ShardCount"]},CreateDeliveryStreamSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{DeliveryStreamName:{type:"string",required:"true"}},required:["DeliveryStreamName"]},KinesisCreateDeliveryStreamStreamOutputConfig={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{DeliveryStreamARN:{type:"string"}}},KinesisCreateDataStreamOutputConfig={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{StreamName:{type:"string"}}},ExtendedS3DestinationConfigurationSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{BucketARN:{type:"string",required:"true"},BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},CompressionFormat:{type:"string",enum:["UNCOMPRESSED","GZIP","ZIP","Snappy"],required:"false"},DataFormatConversionConfiguration:{type:"object",required:"false",properties:{Enabled:{type:"boolean",default:"false",required:"false"},InputFormatConfiguration:{type:"object",required:"false",properties:{Deserializer:{type:"object",required:"false",properties:{HiveJsonSerDe:{type:"object",required:"false",properties:{TimestampFormats:{type:"array",required:"false",items:{type:"string"}}}},OpenXJsonSerDe:{type:"object",required:"false",properties:{CaseInsensitive:{type:"boolean",required:"false"},ColumnToJsonKeyMappings:{type:"array",required:"false",items:{type:"object",properties:{key:{type:"string",required:"false"},value:{type:"string",required:"false"}}}},ConvertDotsInJsonKeysToUnderscores:{type:"boolean",required:"false",default:"false"}}}}}}},OutputFormatConfiguration:{type:"object",required:"false",properties:{Serializer:{type:"object",required:"false",properties:{OrcSerDe:{type:"object",required:"false",properties:{BlockSizeBytes:{type:"integer",minimum:67108864,required:"false"},BloomFilterColumns:{type:"array",required:"false",items:{type:"string"}},BloomFilterFalsePositiveProbability:{type:"number",required:"false",maximum:1,minimum:0},Compression:{type:"string",required:"false",enum:["NONE","ZLIB","SNAPPY"]},DictionaryKeyThreshold:{type:"number",required:"false",maximum:1,minimum:0},EnablePadding:{type:"boolean",required:"false"},FormatVersion:{type:"string",enum:["V0_11","V0_12"],required:"false"},PaddingTolerance:{type:"number",required:"false",minimum:0,maximum:1},RowIndexStride:{type:"integer",minimum:1e3,required:"false"},StripeSizeBytes:{type:"integer",required:"false",minimum:8388608}}},ParquetSerDe:{type:"object",required:"false",properties:{BlockSizeBytes:{type:"integer",required:"false",minimum:67108864},Compression:{type:"string",required:"false",enum:["UNCOMPRESSED","GZIP","SNAPPY"]},EnableDictionaryCompression:{type:"boolean",required:"false"},MaxPaddingBytes:{type:"integer",minimum:0,required:"false"},PageSizeBytes:{type:"integer",required:"false",minimum:65536},WriterVersion:{type:"string",enum:["V1","V2"],required:"false"}}}}}}},SchemaConfiguration:{type:"object",required:"false",properties:{CatalogId:{type:"string",required:"false"},DatabaseName:{type:"string",required:"false"},Region:{type:"string",required:"false"},RoleARN:{type:"string",required:"false"},TableName:{type:"string",required:"false"},VersionId:{type:"string",required:"false"}}}}},EncryptionConfiguration:{type:"object",properties:{KMSEncryptionConfig:{type:"object",properties:{AWSKMSKeyARN:{type:"string",required:"true",maxLength:512,minLength:1}}},NoEncryptionConfig:{type:"string",required:"false",enum:["NoEncryption"]}}},ErrorOutputPrefix:{type:"string",required:"false",description:"evaluates and adds to failed records before writing them to S3."},Prefix:{type:"string",required:"false",description:"additional prefix for files delivered by S3."},ProcessingConfiguration:{type:"object",required:"false",properties:{Enabled:{type:"boolean",required:"false"},Processors:{type:"array",items:{type:"object",required:"false",properties:{Parameters:{type:"array",required:"false",items:{type:"object",required:"false",properties:{ParameterName:{type:"string",enum:["LambdaArn","NumberOfRetries","RoleArn","BufferSizeInMBs","BufferIntervalInSeconds"],required:"true"},ParameterValue:{type:"string",required:"true",maxLength:512,minLength:1}}}},Type:{type:"string",required:"true",enum:["Lambda"]}}}}}},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512},S3BackupConfiguration:{type:"object",required:"false",properties:{BucketARN:{type:"string",required:"true"},BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},CompressionFormat:{type:"string",enum:["UNCOMPRESSED","GZIP","ZIP","Snappy"],required:"false"},EncryptionConfiguration:{type:"object",properties:{KMSEncryptionConfig:{type:"object",properties:{AWSKMSKeyARN:{type:"string",required:"true",maxLength:512,minLength:1}}},NoEncryptionConfig:{type:"string",required:"false",enum:["NoEncryption"]}}},ErrorOutputPrefix:{type:"string",required:"false",description:"evaluates and adds to failed records before writing them to S3."},Prefix:{type:"string",required:"false",description:"additional prefix for files delivered by S3."},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512}}},S3BackupMode:{type:"string",required:"false",enum:["Disabled","Enabled"]}},required:["BucketARN"]},S3DestinationConfigurationSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{BucketARN:{type:"string",required:"true"},BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},CompressionFormat:{type:"string",enum:["UNCOMPRESSED","GZIP","ZIP","Snappy"],required:"false"},EncryptionConfiguration:{type:"object",properties:{KMSEncryptionConfig:{type:"object",properties:{AWSKMSKeyARN:{type:"string",required:"true",maxLength:512,minLength:1}}},NoEncryptionConfig:{type:"string",required:"false",enum:["NoEncryption"]}}},ErrorOutputPrefix:{type:"string",required:"false",description:"evaluates and adds to failed records before writing them to S3."},Prefix:{type:"string",required:"false",description:"additional prefix for files delivered by S3."},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512}},required:["BucketARN"]},ElasticsearchDestinationConfigurationSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},ClusterEndpoint:{type:"string",minLength:1,maxLength:512,required:"false"},DomainARN:{type:"string",minLength:1,maxLength:512,required:"false"},IndexName:{type:"string",minLength:1,maxLength:80,required:"true"},IndexRotationPeriod:{type:"string",enum:["NoRotation","OneHour","OneDay","OneWeek","OneMonth"],required:"false"},ProcessingConfiguration:{type:"object",required:"false",properties:{Enabled:{type:"boolean",required:"false"},Processors:{type:"array",items:{type:"object",required:"false",properties:{Parameters:{type:"array",required:"false",items:{type:"object",required:"false",properties:{ParameterName:{type:"string",enum:["LambdaArn","NumberOfRetries","RoleArn","BufferSizeInMBs","BufferIntervalInSeconds"],required:"true"},ParameterValue:{type:"string",required:"true",maxLength:512,minLength:1}}}},Type:{type:"string",required:"true",enum:["Lambda"]}}}}}},RetryOptions:{type:"object",required:"false",properties:{DurationInSeconds:{type:"integer",required:"false",minimum:0,maximum:7200}}},RoleARN:{type:"string",minLength:1,maxLength:512,required:"true"},S3BackupMode:{type:"string",enum:["FailedDocumentsOnly","AllDocuments"],required:"false"},S3Configuration:{type:"object",required:"true",properties:{BucketARN:{type:"string",required:"true"},BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},CompressionFormat:{type:"string",enum:["UNCOMPRESSED","GZIP","ZIP","Snappy"],required:"false"},EncryptionConfiguration:{type:"object",properties:{KMSEncryptionConfig:{type:"object",properties:{AWSKMSKeyARN:{type:"string",required:"true",maxLength:512,minLength:1}}},NoEncryptionConfig:{type:"string",required:"false",enum:["NoEncryption"]}}},ErrorOutputPrefix:{type:"string",required:"false",description:"evaluates and adds to failed records before writing them to S3."},Prefix:{type:"string",required:"false",description:"additional prefix for files delivered by S3."},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512}}},TypeName:{type:"string",minLength:1,maxLength:100,required:"true"},VpcConfiguration:{type:"object",properties:{RoleARN:{type:"string",required:"true",minLength:1,maxLength:512},SecurityGroupIds:{type:"array",required:"false",items:{type:"string"}},SubnetIds:{type:"array",required:"false",items:{type:"string"}}}}},required:["RoleARN"]},RedshiftDestinationConfigurationSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},ClusterJDBCURL:{type:"string",required:"true",minLength:1},CopyCommand:{type:"object",required:"false",properties:{CopyOptions:{type:"string",required:"true"},DataTableColumns:{type:"string",required:"false"},DataTableName:{type:"string",required:"true",minLength:1}}},Password:{type:"string",required:"true",minLength:6},ProcessingConfiguration:{type:"object",required:"false",properties:{Enabled:{type:"boolean",required:"false"},Processors:{type:"array",items:{type:"object",required:"false",properties:{Parameters:{type:"array",required:"false",items:{type:"object",required:"false",properties:{ParameterName:{type:"string",enum:["LambdaArn","NumberOfRetries","RoleArn","BufferSizeInMBs","BufferIntervalInSeconds"],required:"true"},ParameterValue:{type:"string",required:"true",maxLength:512,minLength:1}}}},Type:{type:"string",required:"true",enum:["Lambda"]}}}}}},RetryOptions:{type:"object",required:"false",properties:{DurationInSeconds:{type:"integer",required:"false",minimum:0,maximum:7200}}},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512},S3BackupConfiguration:{type:"object",required:"false",properties:{BucketARN:{type:"string",required:"true"},BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},CompressionFormat:{type:"string",enum:["UNCOMPRESSED","GZIP","ZIP","Snappy"],required:"false"},EncryptionConfiguration:{type:"object",properties:{KMSEncryptionConfig:{type:"object",properties:{AWSKMSKeyARN:{type:"string",required:"true",maxLength:512,minLength:1}}},NoEncryptionConfig:{type:"string",required:"false",enum:["NoEncryption"]}}},ErrorOutputPrefix:{type:"string",required:"false",description:"evaluates and adds to failed records before writing them to S3."},Prefix:{type:"string",required:"false",description:"additional prefix for files delivered by S3."},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512}}},S3BackupMode:{type:"string",required:"false",enum:["enabled","disabled"]},S3Configuration:{type:"object",required:"false",properties:{BucketARN:{type:"string",required:"true"},BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},CompressionFormat:{type:"string",enum:["UNCOMPRESSED","GZIP","ZIP","Snappy"],required:"false"},EncryptionConfiguration:{type:"object",properties:{KMSEncryptionConfig:{type:"object",properties:{AWSKMSKeyARN:{type:"string",required:"true",maxLength:512,minLength:1}}},NoEncryptionConfig:{type:"string",required:"false",enum:["NoEncryption"]}}},ErrorOutputPrefix:{type:"string",required:"false",description:"evaluates and adds to failed records before writing them to S3."},Prefix:{type:"string",required:"false",description:"additional prefix for files delivered by S3."},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512}}},Username:{type:"string",required:"true",minLength:1}},required:["RoleARN"]},SplunkDestinationConfigurationSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},HECAcknowledgmentTimeoutInSeconds:{type:"integer",required:"false",minimum:180,maximum:600},HECEndpoint:{type:"string",required:"true"},HECEndpointType:{type:"string",required:"true",enum:["Raw","Event"]},HECToken:{type:"string",required:"true"},ProcessingConfiguration:{type:"object",required:"false",properties:{Enabled:{type:"boolean",required:"false"},Processors:{type:"array",items:{type:"object",required:"false",properties:{Parameters:{type:"array",required:"false",items:{type:"object",required:"false",properties:{ParameterName:{type:"string",enum:["LambdaArn","NumberOfRetries","RoleArn","BufferSizeInMBs","BufferIntervalInSeconds"],required:"true"},ParameterValue:{type:"string",required:"true",maxLength:512,minLength:1}}}},Type:{type:"string",required:"true",enum:["Lambda"]}}}}}},RetryOptions:{type:"object",required:"false",properties:{DurationInSeconds:{type:"integer",required:"false",minimum:0,maximum:7200}}},S3BackupMode:{type:"string",required:"false",enum:["FailedEventsOnly","AllEvents"]},S3Configuration:{type:"object",required:"false",properties:{BucketARN:{type:"string",required:"true"},BufferingHints:{type:"object",properties:{IntervalInSeconds:{type:"integer",minimum:60,maximum:900,required:"false"},SizeInMBs:{type:"integer",minimum:1,maximum:128,default:5,required:"false"}}},CloudWatchLoggingOptions:{type:"object",properties:{Enabled:{type:"boolean",required:"false"},LogGroupName:{type:"string",required:"false"},LogStreamName:{type:"string",required:"false"}}},CompressionFormat:{type:"string",enum:["UNCOMPRESSED","GZIP","ZIP","Snappy"],required:"false"},EncryptionConfiguration:{type:"object",properties:{KMSEncryptionConfig:{type:"object",properties:{AWSKMSKeyARN:{type:"string",required:"true",maxLength:512,minLength:1}}},NoEncryptionConfig:{type:"string",required:"false",enum:["NoEncryption"]}}},ErrorOutputPrefix:{type:"string",required:"false",description:"evaluates and adds to failed records before writing them to S3."},Prefix:{type:"string",required:"false",description:"additional prefix for files delivered by S3."},RoleARN:{type:"string",required:"true",minLength:1,maxLength:512}}}},required:["RoleARN"]},KinesisStreamSourceSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{KinesisStreamARN:{type:"string",description:"The ARN of the source Kinesis data stream"},RoleARN:{type:"string",description:"The ARN of the role that provides access to the source Kinesis data stream"}},required:["KinesisStreamARN","RoleARN"]},KinesisCreateVideoStreamOutputConfig={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{StreamARN:{type:"string",required:"false",minLength:1,maxLength:1024}}},CreateVideoStreamSchema={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{StreamName:{type:"string",description:"Name of Video Stream to be created."},DataRetentionInHours:{type:"integer",description:"Number of Hours Data in this stream to be retained."},DeviceName:{type:"string",description:"Name of Device that is writing to stream."},KmsKeyId:{type:"string",description:"The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data."},MediaType:{type:"string",description:"MediaType for this Stream"}}},CreateStreams=function(e){function r(r,t){var i=e.call(this,r,t)||this;return i.injector=r,i.http=t,i.value=function(e,r){var t=r.getField("awsConnection").value,n=r.getField("streamType").value;switch(e){case"awsConnection":return Observable_1.Observable.create(function(e){var r=[];wi_contrib_1.WiContributionUtils.getConnections(i.http,"AWS").subscribe(function(t){t.forEach(function(e){for(var t=0;t<e.settings.length;t++)if("name"===e.settings[t].name){r.push({unique_id:wi_contrib_1.WiContributionUtils.getUniqueId(e),name:e.settings[t].value});break}}),e.next(r)})});case"input":return t&&n?Observable_1.Observable.create(function(e){var r;"DataStream"===n?null!==(r=lodash.cloneDeep(CreateDataStreamSchema))?e.next(JSON.stringify(r)):e.next(r):"VideoStream"===n?null!==(r=lodash.cloneDeep(CreateVideoStreamSchema))?e.next(JSON.stringify(r)):e.next(r):"Firehose-DeliveryStream"===n&&(null!==(r=lodash.cloneDeep(CreateDeliveryStreamSchema))?e.next(JSON.stringify(r)):e.next(r))}):null;case"KinesisStreamSourceConfiguration":return Observable_1.Observable.create(function(e){var i=r.getField("DeliveryStreamType").value;if(t&&"Firehose-DeliveryStream"===n&&"KinesisStreamAsSource"===i){var a=lodash.cloneDeep(KinesisStreamSourceSchema);null!=a?e.next(JSON.stringify(a)):e.next(a)}else e.next(null)});case"DeliveryStreamConfiguration":return Observable_1.Observable.create(function(e){var i,a=r.getField("DeliveryStreamType").value,s=r.getField("DestinationType").value;t&&"Firehose-DeliveryStream"===n&&a?"Firehose-DeliveryStream"===n&&"S3DestinationConfiguration"===s?null!==(i=lodash.cloneDeep(S3DestinationConfigurationSchema))?e.next(JSON.stringify(i)):e.next(i):"Firehose-DeliveryStream"===n&&"ExtendedS3DestinationConfiguration"===s?null!==(i=lodash.cloneDeep(ExtendedS3DestinationConfigurationSchema))?e.next(JSON.stringify(i)):e.next(i):"Firehose-DeliveryStream"===n&&"ElasticsearchDestinationConfiguration"===s?null!==(i=lodash.cloneDeep(ElasticsearchDestinationConfigurationSchema))?e.next(JSON.stringify(i)):e.next(i):"Firehose-DeliveryStream"===n&&"RedshiftDestinationConfiguration"===s?null!==(i=lodash.cloneDeep(RedshiftDestinationConfigurationSchema))?e.next(JSON.stringify(i)):e.next(i):"Firehose-DeliveryStream"===n&&"SplunkDestinationConfiguration"===s?null!==(i=lodash.cloneDeep(SplunkDestinationConfigurationSchema))?e.next(JSON.stringify(i)):e.next(i):e.next(null):e.next(null)});case"Message":return Observable_1.Observable.create(function(e){if(t&&"DataStream"===n)null!=(r=lodash.cloneDeep(KinesisCreateDataStreamOutputConfig))?e.next(JSON.stringify(r)):e.next(r);else if(t&&"VideoStream"===n){null!=(r=lodash.cloneDeep(KinesisCreateVideoStreamOutputConfig))?e.next(JSON.stringify(r)):e.next(r)}else if(t&&"Firehose-DeliveryStream"===n){var r;null!=(r=lodash.cloneDeep(KinesisCreateDeliveryStreamStreamOutputConfig))?e.next(JSON.stringify(r)):e.next(r)}else e.next(null)});case"Error":return Observable_1.Observable.create(function(e){var r=lodash.cloneDeep(KinesisErrorConfiguration);null!=r?e.next(JSON.stringify(r)):e.next(r)});default:return null}},i.validate=function(e,r){if("DeliveryStreamType"===e||"DestinationType"===e)return"Firehose-DeliveryStream"===(t=r.getField("streamType")).value?wi_contrib_1.ValidationResult.newValidationResult().setVisible(!0):wi_contrib_1.ValidationResult.newValidationResult().setVisible(!1);if("KinesisStreamSourceConfiguration"===e){var t=r.getField("DeliveryStreamType"),i=r.getField("streamType");return"KinesisStreamAsSource"===t.value&&"Firehose-DeliveryStream"===i.value?wi_contrib_1.ValidationResult.newValidationResult().setVisible(!0):wi_contrib_1.ValidationResult.newValidationResult().setVisible(!1)}if("DeliveryStreamConfiguration"===e){t=r.getField("DeliveryStreamType");return"Firehose-DeliveryStream"===(i=r.getField("streamType")).value?wi_contrib_1.ValidationResult.newValidationResult().setVisible(!0):wi_contrib_1.ValidationResult.newValidationResult().setVisible(!1)}return Observable_1.Observable.create(function(e){var r=wi_contrib_1.ValidationResult.newValidationResult();e.next(r)})},i.action=function(e,r){return Observable_1.Observable.create(function(e){var r=wi_contrib_1.ActionResult.newActionResult();e.next(r)})},i}return __extends(r,e),r}(wi_contrib_1.WiServiceHandlerContribution);CreateStreams=__decorate([wi_contrib_1.WiContrib({}),core_1.Injectable(),__metadata("design:paramtypes",[core_1.Injector,http_1.Http])],CreateStreams),exports.CreateStreams=CreateStreams;
//# sourceMappingURL=CreateStreams.js.map
