{"name":"wsserver","type":"flogo:trigger","version":"1.0.0","title":"Websocket Server","description":"Websocket server listens for connection request from the client","homepage":"https://github.com/project-flogo/websocket/tree/master/trigger/wsserver","settings":[{"name":"port","type":"integer","required":true,"description":"The port to listen on","display":{"name":"Port","description":"The port to listen on","type":"integer","appPropertySupport":true},"value":9998},{"name":"enableTLS","type":"bool","description":"True - To enable TLS (Transport Layer Security), False - No TLS security","display":{"name":"Enable TLS","description":"True - To enable TLS (Transport Layer Security), False - No TLS Security","type":"boolean","appPropertySupport":true,"visible":false},"value":false},{"name":"serverCert","type":"string","description":"Server certificate file in PEM format. Need to provide file name along with path. Path can be relative to gateway binary location.","display":{"name":"Server Cert","description":"Server certificate file in PEM format. Need to provide file name along with path. Path can be relative to gateway binary location.","type":"fileselector","fileExtensions":[".pem",".cert",".cer",".crt"],"appPropertySupport":true}},{"name":"serverKey","type":"string","description":"Server private key file in PEM format. Need to provide file name along with path. Path can be relative to gateway binary location.","display":{"name":"Server Key","description":"Server private key file in PEM format. Need to provide file name along with path. Path can be relative to gateway binary location.","type":"fileselector","fileExtensions":[".pem",".cert",".cer",".crt",".key"],"appPropertySupport":true}},{"name":"enableClientAuth","type":"bool","description":"True - To enable client AUTH, False - Client AUTH is not enabled","display":{"name":"Enable ClientAuth","description":"True - To enable client AUTH, False - Client AUTH is not enabled","type":"boolean","visible":false},"value":false},{"name":"trustStore","type":"string","description":"Trust dir containing clinet CAs","display":{"name":"TrustStore","description":"Trust dir containing clinet CAs","visible":false}}],"output":[{"name":"pathParams","type":"params","description":"The path parameters for the trigger","display":{"name":"Path Parameters","description":"The path parameters for the trigger","type":"params","readonly":true,"schema":"{\"type\": \"array\",\"items\": {\"type\": \"object\",\"properties\": {\"parameterName\": {\"type\": \"string\"},\"type\": {\"type\": {\"enum\": [\"string\",\"number\",\"boolean\"]}}}}}"}},{"name":"queryParams","type":"params","description":"The query parameters you want to receive for the flow","display":{"name":"Query Parameters","type":"params","description":"The query parameters you want to receive for the flow","schema":"{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"parameterName\":{\"type\":\"string\"},\"type\":{\"type\":{\"enum\":[\"string\",\"number\",\"boolean\"]}},\"repeating\":{\"type\":{\"enum\":[\"true\",\"false\"]}},\"required\":{\"type\":{\"enum\":[\"true\",\"false\"]}}}}}"}},{"name":"headers","type":"params","description":"The HTTP header you want to receive for the flow. Header key gets converted in to canonical format, i.e. the first letter and any letter following a hyphen to upper case, the rest are converted to lowercase. For example, the canonical key for \"accept-encoding\" and \"host\" are \"Accept-Encoding\" and \"Host\" respectively","display":{"name":"Headers","type":"params","description":"The HTTP header you want to receive for the flow. Header key gets converted in to canonical format, i.e. the first letter and any letter following a hyphen to upper case, the rest are converted to lowercase. For example, the canonical key for \"accept-encoding\" and \"host\" are \"Accept-Encoding\" and \"Host\" respectively","schema":"{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"parameterName\":{\"type\":\"string\"},\"type\":{\"type\":{\"enum\":[\"string\",\"number\",\"boolean\"]}},\"repeating\":{\"type\":{\"enum\":[\"true\",\"false\"]}},\"required\":{\"type\":{\"enum\":[\"true\",\"false\"]}}}}}"},"value":"[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Sec-Websocket-Key\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Sec-Websocket-Version\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Upgrade\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"},{"name":"content","type":"any","description":"Received websocket message"},{"name":"wsconnection","type":"any","description":"The websocket connection"}],"reply":[],"handler":{"settings":[{"name":"method","type":"string","required":true,"allowed":["GET","POST","PUT","PATCH","DELETE"],"description":"HTTP request method.","display":{"visible":false,"name":"Method","description":"HTTP request method."},"wizard":{"step":"Configuration"},"value":"GET"},{"name":"path","type":"string","required":true,"description":"The path you have configured. Use {} to configure path parameters. e.g. /users/{id}","display":{"name":"URI Path","description":"The path you have configured. Use {} to configure path parameters. e.g. /users/{id}","appPropertySupport":true},"wizard":{"step":"Configuration"}},{"name":"mode","type":"string","required":true,"allowed":["Data","Connection"],"description":"\"Data\" Mode for output with content and websocket connection both, \"Connection\" Mode for output with websocket connection only.","display":{"name":"Mode","description":"\"Data\" for output with content and \"Connection\" for output with wsconnection"},"wizard":{"type":"dropdown","selection":"single","step":"Configuration"},"value":"Data"},{"name":"format","type":"string","required":true,"value":"String","allowed":["String","JSON"],"display":{"name":"Message Format","description":"Select the format for the message body","appPropertySupport":false,"visible":true,"outputSettingsOnly":true},"wizard":{"type":"dropdown","selection":"single","step":"Configuration"}},{"name":"jsonSchema","type":"object","required":false,"value":"","display":{"name":"Schema for JSON value","description":"The JSON schema for the received WebSocket message","type":"texteditor","syntax":"json","visible":false},"wizard":{"type":"object","step":"Configuration"}}]},"ref":"github.com/project-flogo/websocket/trigger/wsserver","display":{"description":"Websocket server listens for connection request from the client","category":"websocket","visible":true,"smallIcon":"icons/ws_serverTrigger@2x.png","largeIcon":"icons/ws_serverTrigger@3x.png","wizard":["Configuration"]},"actions":[{"name":"Finish"}]}
