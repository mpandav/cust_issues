"use strict";var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),__decorate=this&&this.__decorate||function(e,t,n,i){var o,r=arguments.length,a=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(a=(r<3?o(a):r>3?o(t,n,a):o(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__param=this&&this.__param||function(e,t){return function(n,i){t(n,i,e)}};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),http_1=require("@angular/http"),wi_contrib_1=require("wi-studio/app/contrib/wi-contrib"),contrib_1=require("wi-studio/common/models/contrib"),wi_contrib_internal_1=require("wi-studio/app/contrib/wi-contrib-internal"),rxjs_extensions_1=require("wi-studio/common/rxjs-extensions"),validation_1=require("wi-studio/common/models/validation"),Result=function(){return function(e,t,n){}}(),Connection=function(){return function(){}}();exports.Connection=Connection;var TibcoPostgresConnectorContribution=function(e){function t(t,n){var i=e.call(this,t,n)||this;return i.http=n,i.value=function(e,t){return null},i.dbDriver=function(e){return"PostgreSQL"===e?"postgres":"Redshift"===e?"redshift":"Greenplum"===e?"greenplum":void 0},i.getSSLMode=function(e){return"VerifyCA"===e?"verify-ca":"VerifyFull"===e?"verify-full":""},i.connection=function(e){var t=new Connection;return rxjs_extensions_1.Observable.from(e).reduce(function(e,t){return e[t.name]=t.value,e},t)},i.validate=function(e,t){if("onprem"===e)return wi_contrib_1.WiContributionUtils.getAppConfig(i.http).map(function(e){return e.deployment===wi_contrib_1.APP_DEPLOYMENT.ON_PREMISE?validation_1.ValidationResult.newValidationResult().setVisible(!1):validation_1.ValidationResult.newValidationResult().setVisible(!0)}).catch(function(e){return rxjs_extensions_1.Observable.of(validation_1.ValidationResult.newValidationResult().setVisible(!1))});if("maxconnectattempts"===e&&t.getField("maxconnectattempts").value<0)return validation_1.ValidationResult.newValidationResult().setError("PSQL-1003","Maximum Connection Retry Attempt must be a non-negative number");if("connectionretrydelay"===e&&t.getField("connectionretrydelay").value<0)return validation_1.ValidationResult.newValidationResult().setError("PSQL-1004","Connection Retry Delay must be a non-negative number");if("connectiontimeout"===e&&t.getField("connectiontimeout").value<0)return validation_1.ValidationResult.newValidationResult().setError("PSQL-1005","Connection Timeout must be a non-negative number");t.getField("tlsparam").value.toString();var n=t.getField("tlsconfig"),o=i.dbDriver(t.getField("databaseType").value);switch(e){case"tlsparam":return void 0===n.value||null===n.value||!1===n.value?validation_1.ValidationResult.newValidationResult().setVisible(!1):validation_1.ValidationResult.newValidationResult().setVisible(!0);case"cacert":return validation_1.ValidationResult.newValidationResult().setVisible(n.value);case"clientcert":if("postgres"===o||"greenplum"===o)return validation_1.ValidationResult.newValidationResult().setVisible(n.value);if("redshift"===o)return validation_1.ValidationResult.newValidationResult().setVisible(!1);case"clientkey":if("postgres"===o||"greenplum"===o)return validation_1.ValidationResult.newValidationResult().setVisible(n.value);if("redshift"===o)return validation_1.ValidationResult.newValidationResult().setVisible(!1);default:return null}},i.isDuplicate=function(e,t){return wi_contrib_1.WiContributionUtils.getConnections(i.http,i.category).mergeMap(function(e){return e}).map(function(e){return{id:wi_contrib_1.WiContributionUtils.getUniqueId(e),ction:i.connection(e.settings)}}).filter(function(e){return e.id!==t}).mergeMap(function(e){return e.ction}).filter(function(t){return t.name===e.name}).reduce(function(e,t){return e.push(t),e},[]).map(function(e){return e.length>0})},i.action=function(e,t){if("Connect"===e)return i.connection(t.settings).switchMap(function(e){return i.isDuplicate(e,wi_contrib_1.WiContributionUtils.getUniqueId(t)).map(function(t){if(t)throw new Error("Connection with name "+e.name+" already exists");return e})}).switchMap(function(e){var n,o,r,a,s,l,c,u,d="",f=i.dbDriver(e.databaseType);if(n=btoa(f),o=btoa(e.host),r=btoa(e.port.toString()),a=btoa(e.databaseName),s=btoa(e.user),l=btoa(e.password),c=e.tlsconfig?btoa(i.getSSLMode(e.tlsparam)):btoa("disable"),u=btoa(e.name),null!=e.tlsconfig&&!0===e.tlsconfig){var _={};if("postgres"===f||"greenplum"===f){null!=(v=e.cacert.content)&&""!==v&&(_.sslrootcert={type:"file",extension:"pem",value:v});var b=e.clientcert.content;null!=b&&""!==b&&(_.sslcert={type:"file",extension:"pem",value:b});var p=e.clientkey.content;null!=p&&""!==p&&(_.sslkey={type:"file",extension:"pem",value:p})}else if("redshift"===f){var v;null!=(v=e.cacert.content)&&""!==v&&(_.TrustStore={type:"file",extension:"crt",value:v})}d=btoa(JSON.stringify(_))}return wi_contrib_internal_1.WiInternalProxyCORSUtils.createRequest(i.http,i.dbserviceURL.slice(1),"TCI_DBSERVICE").addMethod("POST").addHeader("Content-Type","application/x-www-form-urlencoded").addHeader("Accept","application/json").addHeader("onpremise",void 0===e.onprem?"false":e.onprem.toString()).addHeader("DatabaseType",i.dbDriver(e.databaseType)).addBody("Driver="+n+"&Server="+o+"&Port="+r+"&Database="+a+"&Uid="+s+"&Pwd="+l+"&SSLMode="+c+"&ConnectionID="+u+"&SSLData="+d).send().switchMap(function(e){try{var n=e.json();if(!0===n.error)return rxjs_extensions_1.Observable.throw(n.errorMsg);var i={context:t,authType:wi_contrib_1.AUTHENTICATION_TYPE.BASIC,authData:{}};return rxjs_extensions_1.Observable.of(contrib_1.ActionResult.newActionResult().setResult(i))}catch(e){return rxjs_extensions_1.Observable.throw({message:"connection failed; unable to access dbservice"})}})}).catch(function(e){return void 0===e.message?rxjs_extensions_1.Observable.of(contrib_1.ActionResult.newActionResult().setSuccess(!1).setResult(new validation_1.ValidationError("PSQL-1001","test connection failed: "+e.json().error.message))):rxjs_extensions_1.Observable.of(contrib_1.ActionResult.newActionResult().setSuccess(!1).setResult(new validation_1.ValidationError("PSQL-1002","test connection failed: "+e.message)))})},i.dbserviceURL="/dbservicego/api/v2/dbtest",i.category="PostgreSQL",i}return __extends(t,e),t}(wi_contrib_1.WiServiceHandlerContribution);TibcoPostgresConnectorContribution=__decorate([wi_contrib_1.WiContrib({}),core_1.Injectable(),__param(0,core_1.Inject(core_1.Injector)),__metadata("design:paramtypes",[Object,http_1.Http])],TibcoPostgresConnectorContribution),exports.TibcoPostgresConnectorContribution=TibcoPostgresConnectorContribution;
//# sourceMappingURL=connector.js.map
