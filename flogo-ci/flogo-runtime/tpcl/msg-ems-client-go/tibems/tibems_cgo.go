// Code generated by tibemscgostub. DO NOT EDIT.
package tibems

//#include <stdint.h>
//#include <tibems/status.h>
import "C"
import (
	"runtime/cgo"
)

//export go_tibems_QueueBrowser_GetNext
func go_tibems_QueueBrowser_GetNext(browserHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	browser := cgo.Handle(browserHandle).Value().(*QueueBrowser)
	r0, err := browser.GetNext()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_QueueBrowser_GetMsgSelector
func go_tibems_QueueBrowser_GetMsgSelector(browserHandle C.uintptr_t) (*C.char, C.tibems_status) {
	browser := cgo.Handle(browserHandle).Value().(*QueueBrowser)
	r0, err := browser.GetMsgSelector()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_QueueBrowser_GetQueue
func go_tibems_QueueBrowser_GetQueue(browserHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	browser := cgo.Handle(browserHandle).Value().(*QueueBrowser)
	r0, err := browser.GetQueue()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_QueueBrowser_Close
func go_tibems_QueueBrowser_Close(browserHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	browser := cgo.Handle(browserHandle).Value().(*QueueBrowser)
	err := browser.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_SetBytes
func go_tibems_BytesMsg_SetBytes(msgHandle C.uintptr_t, p0 []byte) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.SetBytes(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_GetBytes
func go_tibems_BytesMsg_GetBytes(msgHandle C.uintptr_t) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.GetBytes()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_GetBodyLength
func go_tibems_BytesMsg_GetBodyLength(msgHandle C.uintptr_t) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.GetBodyLength()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadBoolean
func go_tibems_BytesMsg_ReadBoolean(msgHandle C.uintptr_t) (bool, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadBoolean()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadBytes
func go_tibems_BytesMsg_ReadBytes(msgHandle C.uintptr_t, p0 int32) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadBytes(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadByte
func go_tibems_BytesMsg_ReadByte(msgHandle C.uintptr_t) (byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadByte()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadDouble
func go_tibems_BytesMsg_ReadDouble(msgHandle C.uintptr_t) (float64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadDouble()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadFloat
func go_tibems_BytesMsg_ReadFloat(msgHandle C.uintptr_t) (float32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadFloat()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadInt
func go_tibems_BytesMsg_ReadInt(msgHandle C.uintptr_t) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadInt()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadLong
func go_tibems_BytesMsg_ReadLong(msgHandle C.uintptr_t) (int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadLong()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_ReadShort
func go_tibems_BytesMsg_ReadShort(msgHandle C.uintptr_t) (int16, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	r0, err := msg.ReadShort()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_BytesMsg_WriteBoolean
func go_tibems_BytesMsg_WriteBoolean(msgHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteBoolean(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_WriteBytes
func go_tibems_BytesMsg_WriteBytes(msgHandle C.uintptr_t, p0 []byte) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteBytes(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_WriteByte
func go_tibems_BytesMsg_WriteByte(msgHandle C.uintptr_t, p0 byte) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteByte(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_WriteDouble
func go_tibems_BytesMsg_WriteDouble(msgHandle C.uintptr_t, p0 float64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteDouble(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_WriteFloat
func go_tibems_BytesMsg_WriteFloat(msgHandle C.uintptr_t, p0 float32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteFloat(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_WriteInt
func go_tibems_BytesMsg_WriteInt(msgHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteInt(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_WriteLong
func go_tibems_BytesMsg_WriteLong(msgHandle C.uintptr_t, p0 int64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteLong(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_WriteShort
func go_tibems_BytesMsg_WriteShort(msgHandle C.uintptr_t, p0 int16) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.WriteShort(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_CreateBytesMsg
func go_tibems_CreateBytesMsg() (C.uintptr_t, C.tibems_status) {
	r0, err := CreateBytesMsg()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_BytesMsg_Reset
func go_tibems_BytesMsg_Reset(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*BytesMsg)
	err := msg.Reset()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_BytesMsg_Close
func go_tibems_BytesMsg_Close(messageHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	message := cgo.Handle(messageHandle).Value().(*BytesMsg)
	err := message.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_CreateConnection
func go_tibems_CreateConnection(s0 *C.char, s1 *C.char, s2 *C.char, s3 *C.char, h4 C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	p2 := C.GoString(s2)
	p3 := C.GoString(s3)
	var p4 *ConnectionOptions
	if h4 != 0 {
		p4 = cgo.Handle(h4).Value().(*ConnectionOptions)
	}
	r0, err := CreateConnection(p0, p1, p2, p3, p4)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Connection_Close
func go_tibems_Connection_Close(connectionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	err := connection.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Connection_GetClientID
func go_tibems_Connection_GetClientID(connectionHandle C.uintptr_t) (*C.char, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	r0, err := connection.GetClientID()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Connection_SetClientID
func go_tibems_Connection_SetClientID(connectionHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	p0 := C.GoString(s0)
	err := connection.SetClientID(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Connection_IsDisconnected
func go_tibems_Connection_IsDisconnected(connectionHandle C.uintptr_t) (bool, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	r0, err := connection.IsDisconnected()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Connection_GetMetaData
func go_tibems_Connection_GetMetaData(connectionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	r0, err := connection.GetMetaData()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Connection_Start
func go_tibems_Connection_Start(connectionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	err := connection.Start()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Connection_Stop
func go_tibems_Connection_Stop(connectionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	err := connection.Stop()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Connection_CreateSession
func go_tibems_Connection_CreateSession(connectionHandle C.uintptr_t, p0 bool, p1 int32) (C.uintptr_t, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	r0, err := connection.CreateSession(p0, AcknowledgeMode(p1))
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Connection_GetActiveURL
func go_tibems_Connection_GetActiveURL(connectionHandle C.uintptr_t) (*C.char, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	r0, err := connection.GetActiveURL()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Connection_SetExceptionListener
func go_tibems_Connection_SetExceptionListener(connectionHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	var p0 ExceptionCallback
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(ExceptionCallback)
	}
	err := connection.SetExceptionListener(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Connection_GetExceptionListener
func go_tibems_Connection_GetExceptionListener(connectionHandle C.uintptr_t) (C.tibems_status, C.uintptr_t) {
	connection := cgo.Handle(connectionHandle).Value().(EMSConnection)
	r0 := connection.GetExceptionListener()
	return 0, C.uintptr_t(cgo.NewHandle(r0))
}

//export go_tibems_MsgConsumer_GetMsgListener
func go_tibems_MsgConsumer_GetMsgListener(consumerHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	r0, err := consumer.GetMsgListener()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MsgConsumer_SetMsgListener
func go_tibems_MsgConsumer_SetMsgListener(consumerHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	var p0 MsgCallback
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(MsgCallback)
	}
	err := consumer.SetMsgListener(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgConsumer_GetDestination
func go_tibems_MsgConsumer_GetDestination(consumerHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	r0, err := consumer.GetDestination()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MsgConsumer_GetNoLocal
func go_tibems_MsgConsumer_GetNoLocal(consumerHandle C.uintptr_t) (bool, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	r0, err := consumer.GetNoLocal()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MsgConsumer_GetMsgSelector
func go_tibems_MsgConsumer_GetMsgSelector(consumerHandle C.uintptr_t) (*C.char, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	r0, err := consumer.GetMsgSelector()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_MsgConsumer_Receive
func go_tibems_MsgConsumer_Receive(consumerHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	r0, err := consumer.Receive()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MsgConsumer_ReceiveTimeout
func go_tibems_MsgConsumer_ReceiveTimeout(consumerHandle C.uintptr_t, p0 int64) (C.uintptr_t, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	r0, err := consumer.ReceiveTimeout(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MsgConsumer_ReceiveNoWait
func go_tibems_MsgConsumer_ReceiveNoWait(consumerHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	r0, err := consumer.ReceiveNoWait()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MsgConsumer_Close
func go_tibems_MsgConsumer_Close(consumerHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	consumer := cgo.Handle(consumerHandle).Value().(*MsgConsumer)
	err := consumer.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_CreateDestination
func go_tibems_CreateDestination(p0 int32, s1 *C.char) (C.uintptr_t, C.tibems_status) {
	p1 := C.GoString(s1)
	r0, err := CreateDestination(DestinationType(p0), p1)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Destination_Close
func go_tibems_Destination_Close(destinationHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	destination := cgo.Handle(destinationHandle).Value().(*Destination)
	err := destination.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Destination_GetName
func go_tibems_Destination_GetName(destinationHandle C.uintptr_t) (*C.char, C.tibems_status) {
	destination := cgo.Handle(destinationHandle).Value().(*Destination)
	r0, err := destination.GetName()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Destination_GetType
func go_tibems_Destination_GetType(destinationHandle C.uintptr_t) (int32, C.tibems_status) {
	destination := cgo.Handle(destinationHandle).Value().(*Destination)
	r0, err := destination.GetType()
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_SetExceptionOnFTSwitch
func go_tibems_SetExceptionOnFTSwitch(p0 bool) (C.tibems_status, C.tibems_status) {
	err := SetExceptionOnFTSwitch(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetExceptionOnFTSwitch
func go_tibems_GetExceptionOnFTSwitch() (bool, C.tibems_status) {
	r0, err := GetExceptionOnFTSwitch()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetExceptionOnFTEvents
func go_tibems_SetExceptionOnFTEvents(p0 bool) (C.tibems_status, C.tibems_status) {
	err := SetExceptionOnFTEvents(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetExceptionOnFTEvents
func go_tibems_GetExceptionOnFTEvents() (bool, C.tibems_status) {
	r0, err := GetExceptionOnFTEvents()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_GetConnectAttemptCount
func go_tibems_GetConnectAttemptCount() (int32, C.tibems_status) {
	r0, err := GetConnectAttemptCount()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetConnectAttemptCount
func go_tibems_SetConnectAttemptCount(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetConnectAttemptCount(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetConnectAttemptDelay
func go_tibems_GetConnectAttemptDelay() (int32, C.tibems_status) {
	r0, err := GetConnectAttemptDelay()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetConnectAttemptDelay
func go_tibems_SetConnectAttemptDelay(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetConnectAttemptDelay(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetConnectAttemptTimeout
func go_tibems_GetConnectAttemptTimeout() (int32, C.tibems_status) {
	r0, err := GetConnectAttemptTimeout()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetConnectAttemptTimeout
func go_tibems_SetConnectAttemptTimeout(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetConnectAttemptTimeout(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetReconnectAttemptCount
func go_tibems_GetReconnectAttemptCount() (int32, C.tibems_status) {
	r0, err := GetReconnectAttemptCount()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetReconnectAttemptCount
func go_tibems_SetReconnectAttemptCount(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetReconnectAttemptCount(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetReconnectAttemptDelay
func go_tibems_GetReconnectAttemptDelay() (int32, C.tibems_status) {
	r0, err := GetReconnectAttemptDelay()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetReconnectAttemptDelay
func go_tibems_SetReconnectAttemptDelay(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetReconnectAttemptDelay(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetReconnectAttemptTimeout
func go_tibems_GetReconnectAttemptTimeout() (int32, C.tibems_status) {
	r0, err := GetReconnectAttemptTimeout()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetReconnectAttemptTimeout
func go_tibems_SetReconnectAttemptTimeout(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetReconnectAttemptTimeout(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetSocketReceiveBufferSize
func go_tibems_GetSocketReceiveBufferSize() (int32, C.tibems_status) {
	r0, err := GetSocketReceiveBufferSize()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetSocketReceiveBufferSize
func go_tibems_SetSocketReceiveBufferSize(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetSocketReceiveBufferSize(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_GetSocketSendBufferSize
func go_tibems_GetSocketSendBufferSize() (int32, C.tibems_status) {
	r0, err := GetSocketSendBufferSize()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_SetSocketSendBufferSize
func go_tibems_SetSocketSendBufferSize(p0 int32) (C.tibems_status, C.tibems_status) {
	err := SetSocketSendBufferSize(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SetTraceFile
func go_tibems_SetTraceFile(s0 *C.char) (C.tibems_status, C.tibems_status) {
	p0 := C.GoString(s0)
	err := SetTraceFile(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Version
func go_tibems_Version() (C.tibems_status, *C.char) {
	r0 := Version()
	return 0, C.CString(r0)
}

//export go_tibems_CreateConnectionFactory
func go_tibems_CreateConnectionFactory(s0 *C.char) (C.uintptr_t, C.tibems_status) {
	p0 := C.GoString(s0)
	r0, err := CreateConnectionFactory(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_CreateUnsharedFailOverConnectionFactory
func go_tibems_CreateUnsharedFailOverConnectionFactory(h0 C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	var p0 *ConnectionFactory
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*ConnectionFactory)
	}
	r0, err := CreateUnsharedFailOverConnectionFactory(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_ConnectionFactory_RecoverUnsharedFailOverConnection
func go_tibems_ConnectionFactory_RecoverUnsharedFailOverConnection(ufoFactoryHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	ufoFactory := cgo.Handle(ufoFactoryHandle).Value().(*ConnectionFactory)
	var p0 *Connection
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Connection)
	}
	err := ufoFactory.RecoverUnsharedFailOverConnection(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_Close
func go_tibems_ConnectionFactory_Close(factoryHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_CreateXAConnection
func go_tibems_ConnectionFactory_CreateXAConnection(factoryHandle C.uintptr_t, s0 *C.char, s1 *C.char) (C.uintptr_t, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	r0, err := factory.CreateXAConnection(p0, p1)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_ConnectionFactory_CreateConnection
func go_tibems_ConnectionFactory_CreateConnection(factoryHandle C.uintptr_t, s0 *C.char, s1 *C.char) (C.uintptr_t, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	r0, err := factory.CreateConnection(p0, p1)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_ConnectionFactory_SetConnectAttemptCount
func go_tibems_ConnectionFactory_SetConnectAttemptCount(factoryHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.SetConnectAttemptCount(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetConnectAttemptDelay
func go_tibems_ConnectionFactory_SetConnectAttemptDelay(factoryHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.SetConnectAttemptDelay(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetConnectAttemptTimeout
func go_tibems_ConnectionFactory_SetConnectAttemptTimeout(factoryHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.SetConnectAttemptTimeout(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetReconnectAttemptCount
func go_tibems_ConnectionFactory_SetReconnectAttemptCount(factoryHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.SetReconnectAttemptCount(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetReconnectAttemptDelay
func go_tibems_ConnectionFactory_SetReconnectAttemptDelay(factoryHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.SetReconnectAttemptDelay(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetReconnectAttemptTimeout
func go_tibems_ConnectionFactory_SetReconnectAttemptTimeout(factoryHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.SetReconnectAttemptTimeout(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetClientID
func go_tibems_ConnectionFactory_SetClientID(factoryHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	err := factory.SetClientID(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetUserName
func go_tibems_ConnectionFactory_SetUserName(factoryHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	err := factory.SetUserName(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetUserPassword
func go_tibems_ConnectionFactory_SetUserPassword(factoryHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	err := factory.SetUserPassword(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetPkPassword
func go_tibems_ConnectionFactory_SetPkPassword(factoryHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	err := factory.SetPkPassword(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetMetric
func go_tibems_ConnectionFactory_SetMetric(factoryHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	err := factory.SetMetric(FactoryLoadBalanceMetric(p0))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetSSLParams
func go_tibems_ConnectionFactory_SetSSLParams(factoryHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	var p0 *SSLParams
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*SSLParams)
	}
	err := factory.SetSSLParams(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetSSLProxy
func go_tibems_ConnectionFactory_SetSSLProxy(factoryHandle C.uintptr_t, s0 *C.char, p1 uint16) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	err := factory.SetSSLProxy(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_SetSSLProxyAuth
func go_tibems_ConnectionFactory_SetSSLProxyAuth(factoryHandle C.uintptr_t, s0 *C.char, s1 *C.char) (C.tibems_status, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	err := factory.SetSSLProxyAuth(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ConnectionFactory_GetSSLProxy
func go_tibems_ConnectionFactory_GetSSLProxy(factoryHandle C.uintptr_t) (*C.char, uint16, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	r0, r1, err := factory.GetSSLProxy()
	status := getStatusFromError(err)
	return C.CString(r0), r1, status
}

//export go_tibems_ConnectionFactory_GetSSLProxyAuth
func go_tibems_ConnectionFactory_GetSSLProxyAuth(factoryHandle C.uintptr_t) (*C.char, *C.char, C.tibems_status) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	r0, r1, err := factory.GetSSLProxyAuth()
	status := getStatusFromError(err)
	return C.CString(r0), C.CString(r1), status
}

//export go_tibems_ConnectionFactory_String
func go_tibems_ConnectionFactory_String(factoryHandle C.uintptr_t) (C.tibems_status, *C.char) {
	factory := cgo.Handle(factoryHandle).Value().(*ConnectionFactory)
	r0 := factory.String()
	return 0, C.CString(r0)
}

//export go_tibems_LookupContextCreate
func go_tibems_LookupContextCreate(s0 *C.char, s1 *C.char, s2 *C.char, h3 C.uintptr_t, s4 *C.char) (C.uintptr_t, C.tibems_status) {
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	p2 := C.GoString(s2)
	var p3 *SSLParams
	if h3 != 0 {
		p3 = cgo.Handle(h3).Value().(*SSLParams)
	}
	p4 := C.GoString(s4)
	r0, err := LookupContextCreate(p0, p1, p2, p3, p4)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_LookupContext_LookupDestination
func go_tibems_LookupContext_LookupDestination(ctxHandle C.uintptr_t, s0 *C.char) (C.uintptr_t, C.tibems_status) {
	ctx := cgo.Handle(ctxHandle).Value().(*LookupContext)
	p0 := C.GoString(s0)
	r0, err := ctx.LookupDestination(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_LookupContext_LookupConnectionFactory
func go_tibems_LookupContext_LookupConnectionFactory(ctxHandle C.uintptr_t, s0 *C.char) (C.uintptr_t, C.tibems_status) {
	ctx := cgo.Handle(ctxHandle).Value().(*LookupContext)
	p0 := C.GoString(s0)
	r0, err := ctx.LookupConnectionFactory(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_LookupContext_Close
func go_tibems_LookupContext_Close(ctxHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	ctx := cgo.Handle(ctxHandle).Value().(*LookupContext)
	err := ctx.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MapMsg_MarshalJSON
func go_tibems_MapMsg_MarshalJSON(msgHandle C.uintptr_t) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	r0, err := msg.MarshalJSON()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_GetMapNames
func go_tibems_MapMsg_GetMapNames(msgHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	r0, err := msg.GetMapNames()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MapMsg_ItemExists
func go_tibems_MapMsg_ItemExists(msgHandle C.uintptr_t, s0 *C.char) (bool, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.ItemExists(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_GetFieldType
func go_tibems_MapMsg_GetFieldType(msgHandle C.uintptr_t, s0 *C.char) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetFieldType(p0)
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_MapMsg_SetBoolean
func go_tibems_MapMsg_SetBoolean(msgHandle C.uintptr_t, s0 *C.char, p1 bool) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetBoolean(p0, p1)
}

//export go_tibems_MapMsg_GetBoolean
func go_tibems_MapMsg_GetBoolean(msgHandle C.uintptr_t, s0 *C.char) (bool, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetBoolean(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetByte
func go_tibems_MapMsg_SetByte(msgHandle C.uintptr_t, s0 *C.char, p1 byte) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetByte(p0, p1)
}

//export go_tibems_MapMsg_GetByte
func go_tibems_MapMsg_GetByte(msgHandle C.uintptr_t, s0 *C.char) (byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetByte(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetBytes
func go_tibems_MapMsg_SetBytes(msgHandle C.uintptr_t, s0 *C.char, p1 []byte) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetBytes(p0, p1)
}

//export go_tibems_MapMsg_GetBytes
func go_tibems_MapMsg_GetBytes(msgHandle C.uintptr_t, s0 *C.char) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetBytes(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetShort
func go_tibems_MapMsg_SetShort(msgHandle C.uintptr_t, s0 *C.char, p1 int16) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetShort(p0, p1)
}

//export go_tibems_MapMsg_GetShort
func go_tibems_MapMsg_GetShort(msgHandle C.uintptr_t, s0 *C.char) (int16, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetShort(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetInt
func go_tibems_MapMsg_SetInt(msgHandle C.uintptr_t, s0 *C.char, p1 int32) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetInt(p0, p1)
}

//export go_tibems_MapMsg_GetInt
func go_tibems_MapMsg_GetInt(msgHandle C.uintptr_t, s0 *C.char) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetInt(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetLong
func go_tibems_MapMsg_SetLong(msgHandle C.uintptr_t, s0 *C.char, p1 int64) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetLong(p0, p1)
}

//export go_tibems_MapMsg_GetLong
func go_tibems_MapMsg_GetLong(msgHandle C.uintptr_t, s0 *C.char) (int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetLong(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetFloat
func go_tibems_MapMsg_SetFloat(msgHandle C.uintptr_t, s0 *C.char, p1 float32) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetFloat(p0, p1)
}

//export go_tibems_MapMsg_GetFloat
func go_tibems_MapMsg_GetFloat(msgHandle C.uintptr_t, s0 *C.char) (float32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetFloat(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetDouble
func go_tibems_MapMsg_SetDouble(msgHandle C.uintptr_t, s0 *C.char, p1 float64) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetDouble(p0, p1)
}

//export go_tibems_MapMsg_GetDouble
func go_tibems_MapMsg_GetDouble(msgHandle C.uintptr_t, s0 *C.char) (float64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetDouble(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetString
func go_tibems_MapMsg_SetString(msgHandle C.uintptr_t, s0 *C.char, s1 *C.char) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	msg.SetString(p0, p1)
}

//export go_tibems_MapMsg_GetString
func go_tibems_MapMsg_GetString(msgHandle C.uintptr_t, s0 *C.char) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetString(p0)
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_MapMsg_SetMapMsg
func go_tibems_MapMsg_SetMapMsg(msgHandle C.uintptr_t, s0 *C.char, h1 C.uintptr_t) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	var p1 *MapMsg
	if h1 != 0 {
		p1 = cgo.Handle(h1).Value().(*MapMsg)
	}
	msg.SetMapMsg(p0, p1)
}

//export go_tibems_MapMsg_GetMapMsg
func go_tibems_MapMsg_GetMapMsg(msgHandle C.uintptr_t, s0 *C.char) (C.uintptr_t, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetMapMsg(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MapMsg_SetShortArray
func go_tibems_MapMsg_SetShortArray(msgHandle C.uintptr_t, s0 *C.char, p1 []int16) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetShortArray(p0, p1)
}

//export go_tibems_MapMsg_GetShortArray
func go_tibems_MapMsg_GetShortArray(msgHandle C.uintptr_t, s0 *C.char) ([]int16, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetShortArray(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetIntArray
func go_tibems_MapMsg_SetIntArray(msgHandle C.uintptr_t, s0 *C.char, p1 []int32) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetIntArray(p0, p1)
}

//export go_tibems_MapMsg_GetIntArray
func go_tibems_MapMsg_GetIntArray(msgHandle C.uintptr_t, s0 *C.char) ([]int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetIntArray(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetLongArray
func go_tibems_MapMsg_SetLongArray(msgHandle C.uintptr_t, s0 *C.char, p1 []int64) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetLongArray(p0, p1)
}

//export go_tibems_MapMsg_GetLongArray
func go_tibems_MapMsg_GetLongArray(msgHandle C.uintptr_t, s0 *C.char) ([]int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetLongArray(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetFloatArray
func go_tibems_MapMsg_SetFloatArray(msgHandle C.uintptr_t, s0 *C.char, p1 []float32) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetFloatArray(p0, p1)
}

//export go_tibems_MapMsg_GetFloatArray
func go_tibems_MapMsg_GetFloatArray(msgHandle C.uintptr_t, s0 *C.char) ([]float32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetFloatArray(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MapMsg_SetDoubleArray
func go_tibems_MapMsg_SetDoubleArray(msgHandle C.uintptr_t, s0 *C.char, p1 []float64) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	msg.SetDoubleArray(p0, p1)
}

//export go_tibems_MapMsg_GetDoubleArray
func go_tibems_MapMsg_GetDoubleArray(msgHandle C.uintptr_t, s0 *C.char) ([]float64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	p0 := C.GoString(s0)
	r0, err := msg.GetDoubleArray(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_CreateMapMsg
func go_tibems_CreateMapMsg() (C.uintptr_t, C.tibems_status) {
	r0, err := CreateMapMsg()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MapMsg_Close
func go_tibems_MapMsg_Close(messageHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	message := cgo.Handle(messageHandle).Value().(*MapMsg)
	err := message.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MapMsg_ClearBody
func go_tibems_MapMsg_ClearBody(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	err := msg.ClearBody()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MapMsg_ClearProperties
func go_tibems_MapMsg_ClearProperties(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	err := msg.ClearProperties()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MapMsg_Marshal
func go_tibems_MapMsg_Marshal(msgHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*MapMsg)
	var p0 any
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(any)
	}
	err := msg.Marshal(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Marshal
func go_tibems_Marshal(h0 C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	var p0 any
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(any)
	}
	r0, err := Marshal(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Unmarshal
func go_tibems_Unmarshal(h0 C.uintptr_t, h1 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	var p0 *MapMsg
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*MapMsg)
	}
	var p1 any
	if h1 != 0 {
		p1 = cgo.Handle(h1).Value().(any)
	}
	err := Unmarshal(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_Print
func go_tibems_Message_Print(msgHandle C.uintptr_t) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	msg.Print()
}

//export go_tibems_Message_String
func go_tibems_Message_String(msgHandle C.uintptr_t) (C.tibems_status, *C.char) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0 := msg.String()
	return 0, C.CString(r0)
}

//export go_tibems_CreateMsgFromBytes
func go_tibems_CreateMsgFromBytes(p0 []byte) (C.uintptr_t, C.tibems_status) {
	r0, err := CreateMsgFromBytes(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Message_MakeWriteable
func go_tibems_Message_MakeWriteable(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.MakeWriteable()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetAsBytes
func go_tibems_Message_GetAsBytes(msgHandle C.uintptr_t) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetAsBytes()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetEncoding
func go_tibems_Message_SetEncoding(msgHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetEncoding(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_CreateCopy
func go_tibems_Message_CreateCopy(msgHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.CreateCopy()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Message_Acknowledge
func go_tibems_Message_Acknowledge(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.Acknowledge()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetByteSize
func go_tibems_Message_GetByteSize(msgHandle C.uintptr_t) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetByteSize()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_GetEncoding
func go_tibems_Message_GetEncoding(msgHandle C.uintptr_t) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetEncoding()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Message_GetBodyType
func go_tibems_Message_GetBodyType(msgHandle C.uintptr_t) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetBodyType()
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_Message_GetDestination
func go_tibems_Message_GetDestination(msgHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetDestination()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Message_SetDestination
func go_tibems_Message_SetDestination(msgHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	err := msg.SetDestination(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetDeliveryMode
func go_tibems_Message_GetDeliveryMode(msgHandle C.uintptr_t) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetDeliveryMode()
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_Message_SetDeliveryMode
func go_tibems_Message_SetDeliveryMode(msgHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.SetDeliveryMode(DeliveryMode(p0))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetDeliveryTime
func go_tibems_Message_GetDeliveryTime(msgHandle C.uintptr_t) (int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetDeliveryTime()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_GetType
func go_tibems_Message_GetType(msgHandle C.uintptr_t) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetType()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Message_SetType
func go_tibems_Message_SetType(msgHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetType(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetRedelivered
func go_tibems_Message_GetRedelivered(msgHandle C.uintptr_t) (bool, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetRedelivered()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetRedelivered
func go_tibems_Message_SetRedelivered(msgHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.SetRedelivered(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetCorrelationID
func go_tibems_Message_GetCorrelationID(msgHandle C.uintptr_t) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetCorrelationID()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Message_SetCorrelationID
func go_tibems_Message_SetCorrelationID(msgHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetCorrelationID(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetMessageID
func go_tibems_Message_GetMessageID(msgHandle C.uintptr_t) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetMessageID()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Message_SetMessageID
func go_tibems_Message_SetMessageID(msgHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetMessageID(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetTimestamp
func go_tibems_Message_GetTimestamp(msgHandle C.uintptr_t) (int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetTimestamp()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetTimestamp
func go_tibems_Message_SetTimestamp(msgHandle C.uintptr_t, p0 int64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.SetTimestamp(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetPriority
func go_tibems_Message_GetPriority(msgHandle C.uintptr_t) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetPriority()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetPriority
func go_tibems_Message_SetPriority(msgHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.SetPriority(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetExpiration
func go_tibems_Message_GetExpiration(msgHandle C.uintptr_t) (int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetExpiration()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetExpiration
func go_tibems_Message_SetExpiration(msgHandle C.uintptr_t, p0 int64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.SetExpiration(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_PropertyExists
func go_tibems_Message_PropertyExists(msgHandle C.uintptr_t, s0 *C.char) (bool, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.PropertyExists(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_GetPropertyNames
func go_tibems_Message_GetPropertyNames(msgHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetPropertyNames()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MessageEnumeration_Close
func go_tibems_MessageEnumeration_Close(msgEnumHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msgEnum := cgo.Handle(msgEnumHandle).Value().(*MessageEnumeration)
	err := msgEnum.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MessageEnumeration_GetNextName
func go_tibems_MessageEnumeration_GetNextName(msgEnumHandle C.uintptr_t) (*C.char, C.tibems_status) {
	msgEnum := cgo.Handle(msgEnumHandle).Value().(*MessageEnumeration)
	r0, err := msgEnum.GetNextName()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_Message_MarshalJSON
func go_tibems_Message_MarshalJSON(msgHandle C.uintptr_t) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.MarshalJSON()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetBooleanProperty
func go_tibems_Message_SetBooleanProperty(msgHandle C.uintptr_t, s0 *C.char, p1 bool) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetBooleanProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetBooleanProperty
func go_tibems_Message_GetBooleanProperty(msgHandle C.uintptr_t, s0 *C.char) (bool, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetBooleanProperty(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetByteProperty
func go_tibems_Message_SetByteProperty(msgHandle C.uintptr_t, s0 *C.char, p1 byte) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetByteProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetByteProperty
func go_tibems_Message_GetByteProperty(msgHandle C.uintptr_t, s0 *C.char) (byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetByteProperty(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetShortProperty
func go_tibems_Message_SetShortProperty(msgHandle C.uintptr_t, s0 *C.char, p1 int16) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetShortProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetShortProperty
func go_tibems_Message_GetShortProperty(msgHandle C.uintptr_t, s0 *C.char) (int16, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetShortProperty(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetIntProperty
func go_tibems_Message_SetIntProperty(msgHandle C.uintptr_t, s0 *C.char, p1 int32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetIntProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetIntProperty
func go_tibems_Message_GetIntProperty(msgHandle C.uintptr_t, s0 *C.char) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetIntProperty(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetLongProperty
func go_tibems_Message_SetLongProperty(msgHandle C.uintptr_t, s0 *C.char, p1 int64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetLongProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetLongProperty
func go_tibems_Message_GetLongProperty(msgHandle C.uintptr_t, s0 *C.char) (int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetLongProperty(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetFloatProperty
func go_tibems_Message_SetFloatProperty(msgHandle C.uintptr_t, s0 *C.char, p1 float32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetFloatProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetFloatProperty
func go_tibems_Message_GetFloatProperty(msgHandle C.uintptr_t, s0 *C.char) (float32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetFloatProperty(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetDoubleProperty
func go_tibems_Message_SetDoubleProperty(msgHandle C.uintptr_t, s0 *C.char, p1 float64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	err := msg.SetDoubleProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetDoubleProperty
func go_tibems_Message_GetDoubleProperty(msgHandle C.uintptr_t, s0 *C.char) (float64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetDoubleProperty(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Message_SetStringProperty
func go_tibems_Message_SetStringProperty(msgHandle C.uintptr_t, s0 *C.char, s1 *C.char) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	err := msg.SetStringProperty(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetStringProperty
func go_tibems_Message_GetStringProperty(msgHandle C.uintptr_t, s0 *C.char) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetStringProperty(p0)
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_CreateMsg
func go_tibems_CreateMsg() (C.uintptr_t, C.tibems_status) {
	r0, err := CreateMsg()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Message_Close
func go_tibems_Message_Close(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_SetReplyTo
func go_tibems_Message_SetReplyTo(msgHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	err := msg.SetReplyTo(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetReplyTo
func go_tibems_Message_GetReplyTo(msgHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	r0, err := msg.GetReplyTo()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Message_ClearBody
func go_tibems_Message_ClearBody(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.ClearBody()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_ClearProperties
func go_tibems_Message_ClearProperties(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	err := msg.ClearProperties()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Message_GetPropertyType
func go_tibems_Message_GetPropertyType(msgHandle C.uintptr_t, s0 *C.char) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(Message)
	p0 := C.GoString(s0)
	r0, err := msg.GetPropertyType(p0)
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_ObjectMsg_SetObjectBytes
func go_tibems_ObjectMsg_SetObjectBytes(msgHandle C.uintptr_t, p0 []byte) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*ObjectMsg)
	err := msg.SetObjectBytes(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_ObjectMsg_GetObjectBytes
func go_tibems_ObjectMsg_GetObjectBytes(msgHandle C.uintptr_t) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*ObjectMsg)
	r0, err := msg.GetObjectBytes()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_CreateObjectMsg
func go_tibems_CreateObjectMsg() (C.uintptr_t, C.tibems_status) {
	r0, err := CreateObjectMsg()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_ObjectMsg_Close
func go_tibems_ObjectMsg_Close(messageHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	message := cgo.Handle(messageHandle).Value().(*ObjectMsg)
	err := message.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_AsyncSend
func go_tibems_MsgProducer_AsyncSend(producerHandle C.uintptr_t, h0 C.uintptr_t, h1 C.uintptr_t, h2 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	var p0 Message
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(Message)
	}
	var p1 MsgCompletionCallback
	if h1 != 0 {
		p1 = cgo.Handle(h1).Value().(MsgCompletionCallback)
	}
	var p2 *SendOptions
	if h2 != 0 {
		p2 = cgo.Handle(h2).Value().(*SendOptions)
	}
	err := producer.AsyncSend(p0, p1, p2)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_Send
func go_tibems_MsgProducer_Send(producerHandle C.uintptr_t, h0 C.uintptr_t, h1 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	var p0 Message
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(Message)
	}
	var p1 *SendOptions
	if h1 != 0 {
		p1 = cgo.Handle(h1).Value().(*SendOptions)
	}
	err := producer.Send(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_GetDestination
func go_tibems_MsgProducer_GetDestination(producerHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetDestination()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MsgProducer_GetDisableMessageID
func go_tibems_MsgProducer_GetDisableMessageID(producerHandle C.uintptr_t) (bool, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetDisableMessageID()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MsgProducer_SetDisableMessageID
func go_tibems_MsgProducer_SetDisableMessageID(producerHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.SetDisableMessageID(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_GetDisableMessageTimestamp
func go_tibems_MsgProducer_GetDisableMessageTimestamp(producerHandle C.uintptr_t) (bool, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetDisableMessageTimestamp()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MsgProducer_SetDisableMessageTimestamp
func go_tibems_MsgProducer_SetDisableMessageTimestamp(producerHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.SetDisableMessageTimestamp(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_GetDeliveryMode
func go_tibems_MsgProducer_GetDeliveryMode(producerHandle C.uintptr_t) (int32, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetDeliveryMode()
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_MsgProducer_SetDeliveryMode
func go_tibems_MsgProducer_SetDeliveryMode(producerHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.SetDeliveryMode(DeliveryMode(p0))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_GetDeliveryDelay
func go_tibems_MsgProducer_GetDeliveryDelay(producerHandle C.uintptr_t) (int64, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetDeliveryDelay()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MsgProducer_SetDeliveryDelay
func go_tibems_MsgProducer_SetDeliveryDelay(producerHandle C.uintptr_t, p0 int64) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.SetDeliveryDelay(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_GetTimeToLive
func go_tibems_MsgProducer_GetTimeToLive(producerHandle C.uintptr_t) (int64, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetTimeToLive()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MsgProducer_SetTimeToLive
func go_tibems_MsgProducer_SetTimeToLive(producerHandle C.uintptr_t, p0 int64) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.SetTimeToLive(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_GetPriority
func go_tibems_MsgProducer_GetPriority(producerHandle C.uintptr_t) (int32, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetPriority()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_MsgProducer_SetPriority
func go_tibems_MsgProducer_SetPriority(producerHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.SetPriority(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_GetNPSendCheckMode
func go_tibems_MsgProducer_GetNPSendCheckMode(producerHandle C.uintptr_t) (int32, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	r0, err := producer.GetNPSendCheckMode()
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_MsgProducer_SetNPSendCheckMode
func go_tibems_MsgProducer_SetNPSendCheckMode(producerHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.SetNPSendCheckMode(NPSendCheckMode(p0))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgProducer_Close
func go_tibems_MsgProducer_Close(producerHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	producer := cgo.Handle(producerHandle).Value().(*MsgProducer)
	err := producer.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_MsgRequestor_Request
func go_tibems_MsgRequestor_Request(requestorHandle C.uintptr_t, h0 C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	requestor := cgo.Handle(requestorHandle).Value().(*MsgRequestor)
	var p0 Message
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(Message)
	}
	r0, err := requestor.Request(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_MsgRequestor_Close
func go_tibems_MsgRequestor_Close(requestorHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	requestor := cgo.Handle(requestorHandle).Value().(*MsgRequestor)
	err := requestor.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Session_GetAcknowledgeMode
func go_tibems_Session_GetAcknowledgeMode(sessionHandle C.uintptr_t) (int32, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.GetAcknowledgeMode()
	status := getStatusFromError(err)
	return int32(r0), status
}

//export go_tibems_Session_GetTransacted
func go_tibems_Session_GetTransacted(sessionHandle C.uintptr_t) (bool, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.GetTransacted()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_Session_Commit
func go_tibems_Session_Commit(sessionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	err := session.Commit()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Session_Recover
func go_tibems_Session_Recover(sessionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	err := session.Recover()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Session_Rollback
func go_tibems_Session_Rollback(sessionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	err := session.Rollback()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Session_CreateTemporaryQueue
func go_tibems_Session_CreateTemporaryQueue(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.CreateTemporaryQueue()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateTemporaryTopic
func go_tibems_Session_CreateTemporaryTopic(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.CreateTemporaryTopic()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateBrowser
func go_tibems_Session_CreateBrowser(sessionHandle C.uintptr_t, h0 C.uintptr_t, s1 *C.char) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	p1 := C.GoString(s1)
	r0, err := session.CreateBrowser((*Queue)(p0), p1)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateConsumer
func go_tibems_Session_CreateConsumer(sessionHandle C.uintptr_t, h0 C.uintptr_t, s1 *C.char, p2 bool) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	p1 := C.GoString(s1)
	r0, err := session.CreateConsumer(p0, p1, p2)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateSharedConsumer
func go_tibems_Session_CreateSharedConsumer(sessionHandle C.uintptr_t, h0 C.uintptr_t, s1 *C.char, s2 *C.char) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	p1 := C.GoString(s1)
	p2 := C.GoString(s2)
	r0, err := session.CreateSharedConsumer((*Topic)(p0), p1, p2)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateDurableSubscriber
func go_tibems_Session_CreateDurableSubscriber(sessionHandle C.uintptr_t, h0 C.uintptr_t, s1 *C.char, s2 *C.char, p3 bool) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	p1 := C.GoString(s1)
	p2 := C.GoString(s2)
	r0, err := session.CreateDurableSubscriber((*Topic)(p0), p1, p2, p3)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateSharedDurableConsumer
func go_tibems_Session_CreateSharedDurableConsumer(sessionHandle C.uintptr_t, h0 C.uintptr_t, s1 *C.char, s2 *C.char) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	p1 := C.GoString(s1)
	p2 := C.GoString(s2)
	r0, err := session.CreateSharedDurableConsumer((*Topic)(p0), p1, p2)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateRequestor
func go_tibems_Session_CreateRequestor(sessionHandle C.uintptr_t, h0 C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	r0, err := session.CreateRequestor(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateProducer
func go_tibems_Session_CreateProducer(sessionHandle C.uintptr_t, h0 C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	var p0 *Destination
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*Destination)
	}
	r0, err := session.CreateProducer(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateBytesMessage
func go_tibems_Session_CreateBytesMessage(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.CreateBytesMessage()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateMapMessage
func go_tibems_Session_CreateMapMessage(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.CreateMapMessage()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateMessage
func go_tibems_Session_CreateMessage(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.CreateMessage()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateStreamMessage
func go_tibems_Session_CreateStreamMessage(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.CreateStreamMessage()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_CreateTextMessage
func go_tibems_Session_CreateTextMessage(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	r0, err := session.CreateTextMessage()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_Session_Unsubscribe
func go_tibems_Session_Unsubscribe(sessionHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	p0 := C.GoString(s0)
	err := session.Unsubscribe(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_Session_Close
func go_tibems_Session_Close(sessionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(EMSSession)
	err := session.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_Close
func go_tibems_SSLParams_Close(sslParamsHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_CreateSSLParams
func go_tibems_CreateSSLParams() (C.uintptr_t, C.tibems_status) {
	r0, err := CreateSSLParams()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_SSLParams_SetCiphers
func go_tibems_SSLParams_SetCiphers(sslParamsHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	p0 := C.GoString(s0)
	err := sslParams.SetCiphers(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_SetIdentity
func go_tibems_SSLParams_SetIdentity(sslParamsHandle C.uintptr_t, p0 []byte, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.SetIdentity(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_GetIdentity
func go_tibems_SSLParams_GetIdentity(sslParamsHandle C.uintptr_t) ([]byte, int32, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	r0, r1, err := sslParams.GetIdentity()
	status := getStatusFromError(err)
	return r0, int32(r1), status
}

//export go_tibems_SSLParams_SetIdentityFile
func go_tibems_SSLParams_SetIdentityFile(sslParamsHandle C.uintptr_t, s0 *C.char, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	p0 := C.GoString(s0)
	err := sslParams.SetIdentityFile(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_AddIssuerCert
func go_tibems_SSLParams_AddIssuerCert(sslParamsHandle C.uintptr_t, p0 []byte, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.AddIssuerCert(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_AddIssuerCertFile
func go_tibems_SSLParams_AddIssuerCertFile(sslParamsHandle C.uintptr_t, s0 *C.char, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	p0 := C.GoString(s0)
	err := sslParams.AddIssuerCertFile(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_SetPrivateKey
func go_tibems_SSLParams_SetPrivateKey(sslParamsHandle C.uintptr_t, p0 []byte, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.SetPrivateKey(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_GetPrivateKey
func go_tibems_SSLParams_GetPrivateKey(sslParamsHandle C.uintptr_t) ([]byte, int32, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	r0, r1, err := sslParams.GetPrivateKey()
	status := getStatusFromError(err)
	return r0, int32(r1), status
}

//export go_tibems_SSLParams_SetPrivateKeyFile
func go_tibems_SSLParams_SetPrivateKeyFile(sslParamsHandle C.uintptr_t, s0 *C.char, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	p0 := C.GoString(s0)
	err := sslParams.SetPrivateKeyFile(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_AddTrustedCert
func go_tibems_SSLParams_AddTrustedCert(sslParamsHandle C.uintptr_t, p0 []byte, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.AddTrustedCert(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_AddTrustedCertFile
func go_tibems_SSLParams_AddTrustedCertFile(sslParamsHandle C.uintptr_t, s0 *C.char, p1 int32) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	p0 := C.GoString(s0)
	err := sslParams.AddTrustedCertFile(p0, SSLEncodingType(p1))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_SetAuthOnly
func go_tibems_SSLParams_SetAuthOnly(sslParamsHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.SetAuthOnly(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_SetVerifyHost
func go_tibems_SSLParams_SetVerifyHost(sslParamsHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.SetVerifyHost(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_SetVerifyHostName
func go_tibems_SSLParams_SetVerifyHostName(sslParamsHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.SetVerifyHostName(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_SetHostNameVerifier
func go_tibems_SSLParams_SetHostNameVerifier(sslParamsHandle C.uintptr_t, p0 func(connectedHostname string, expectedHostname string, certificateName string) error) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	err := sslParams.SetHostNameVerifier(SSLHostNameVerifier(p0))
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SSLParams_SetExpectedHostName
func go_tibems_SSLParams_SetExpectedHostName(sslParamsHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	sslParams := cgo.Handle(sslParamsHandle).Value().(*SSLParams)
	p0 := C.GoString(s0)
	err := sslParams.SetExpectedHostName(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_SetSSLTrace
func go_tibems_SetSSLTrace(p0 bool) {
	SetSSLTrace(p0)
}

//export go_tibems_SetSSLDebugTrace
func go_tibems_SetSSLDebugTrace(p0 bool) {
	SetSSLDebugTrace(p0)
}

//export go_tibems_GetSSLTrace
func go_tibems_GetSSLTrace() (C.tibems_status, bool) {
	r0 := GetSSLTrace()
	return 0, r0
}

//export go_tibems_GetSSLDebugTrace
func go_tibems_GetSSLDebugTrace() (C.tibems_status, bool) {
	r0 := GetSSLDebugTrace()
	return 0, r0
}

//export go_tibems_StreamMsg_ReadBoolean
func go_tibems_StreamMsg_ReadBoolean(msgHandle C.uintptr_t) (bool, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadBoolean()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteBoolean
func go_tibems_StreamMsg_WriteBoolean(msgHandle C.uintptr_t, p0 bool) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteBoolean(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadByte
func go_tibems_StreamMsg_ReadByte(msgHandle C.uintptr_t) (byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadByte()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteByte
func go_tibems_StreamMsg_WriteByte(msgHandle C.uintptr_t, p0 byte) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteByte(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadDouble
func go_tibems_StreamMsg_ReadDouble(msgHandle C.uintptr_t) (float64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadDouble()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteDouble
func go_tibems_StreamMsg_WriteDouble(msgHandle C.uintptr_t, p0 float64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteDouble(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadFloat
func go_tibems_StreamMsg_ReadFloat(msgHandle C.uintptr_t) (float32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadFloat()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteFloat
func go_tibems_StreamMsg_WriteFloat(msgHandle C.uintptr_t, p0 float32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteFloat(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadInt
func go_tibems_StreamMsg_ReadInt(msgHandle C.uintptr_t) (int32, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadInt()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteInt
func go_tibems_StreamMsg_WriteInt(msgHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteInt(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadLong
func go_tibems_StreamMsg_ReadLong(msgHandle C.uintptr_t) (int64, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadLong()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteLong
func go_tibems_StreamMsg_WriteLong(msgHandle C.uintptr_t, p0 int64) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteLong(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadShort
func go_tibems_StreamMsg_ReadShort(msgHandle C.uintptr_t) (int16, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadShort()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteShort
func go_tibems_StreamMsg_WriteShort(msgHandle C.uintptr_t, p0 int16) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteShort(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadString
func go_tibems_StreamMsg_ReadString(msgHandle C.uintptr_t) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadString()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_StreamMsg_WriteString
func go_tibems_StreamMsg_WriteString(msgHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	p0 := C.GoString(s0)
	err := msg.WriteString(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_ReadBytes
func go_tibems_StreamMsg_ReadBytes(msgHandle C.uintptr_t) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	r0, err := msg.ReadBytes()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_StreamMsg_WriteBytes
func go_tibems_StreamMsg_WriteBytes(msgHandle C.uintptr_t, p0 []byte) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.WriteBytes(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_StreamMsg_Reset
func go_tibems_StreamMsg_Reset(msgHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*StreamMsg)
	err := msg.Reset()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_CreateStreamMsg
func go_tibems_CreateStreamMsg() (C.uintptr_t, C.tibems_status) {
	r0, err := CreateStreamMsg()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_StreamMsg_Close
func go_tibems_StreamMsg_Close(messageHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	message := cgo.Handle(messageHandle).Value().(*StreamMsg)
	err := message.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_TextMsg_MarshalJSON
func go_tibems_TextMsg_MarshalJSON(msgHandle C.uintptr_t) ([]byte, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*TextMsg)
	r0, err := msg.MarshalJSON()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_TextMsg_SetText
func go_tibems_TextMsg_SetText(msgHandle C.uintptr_t, s0 *C.char) (C.tibems_status, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*TextMsg)
	p0 := C.GoString(s0)
	err := msg.SetText(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_TextMsg_GetText
func go_tibems_TextMsg_GetText(msgHandle C.uintptr_t) (*C.char, C.tibems_status) {
	msg := cgo.Handle(msgHandle).Value().(*TextMsg)
	r0, err := msg.GetText()
	status := getStatusFromError(err)
	return C.CString(r0), status
}

//export go_tibems_CreateTextMsg
func go_tibems_CreateTextMsg() (C.uintptr_t, C.tibems_status) {
	r0, err := CreateTextMsg()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_TextMsg_Close
func go_tibems_TextMsg_Close(messageHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	message := cgo.Handle(messageHandle).Value().(*TextMsg)
	err := message.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_CreateXAConnection
func go_tibems_CreateXAConnection(s0 *C.char, s1 *C.char, s2 *C.char, s3 *C.char, h4 C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	p0 := C.GoString(s0)
	p1 := C.GoString(s1)
	p2 := C.GoString(s2)
	p3 := C.GoString(s3)
	var p4 *ConnectionOptions
	if h4 != 0 {
		p4 = cgo.Handle(h4).Value().(*ConnectionOptions)
	}
	r0, err := CreateXAConnection(p0, p1, p2, p3, p4)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_XAConnection_CreateXASession
func go_tibems_XAConnection_CreateXASession(connectionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(*XAConnection)
	r0, err := connection.CreateXASession()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_XAConnection_GetXASession
func go_tibems_XAConnection_GetXASession(connectionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(*XAConnection)
	r0, err := connection.GetXASession()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_XAConnection_Close
func go_tibems_XAConnection_Close(connectionHandle C.uintptr_t) (C.tibems_status, C.tibems_status) {
	connection := cgo.Handle(connectionHandle).Value().(*XAConnection)
	err := connection.Close()
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_XASession_GetXAResource
func go_tibems_XASession_GetXAResource(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(*XASession)
	r0, err := session.GetXAResource()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_XASession_GetSession
func go_tibems_XASession_GetSession(sessionHandle C.uintptr_t) (C.uintptr_t, C.tibems_status) {
	session := cgo.Handle(sessionHandle).Value().(*XASession)
	r0, err := session.GetSession()
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_XAConnectionGet
func go_tibems_XAConnectionGet(s0 *C.char) (C.uintptr_t, C.tibems_status) {
	p0 := C.GoString(s0)
	r0, err := XAConnectionGet(p0)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_XAResource_Commit
func go_tibems_XAResource_Commit(resourceHandle C.uintptr_t, h0 C.uintptr_t, p1 bool) (C.tibems_status, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	var p0 *XID
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*XID)
	}
	err := resource.Commit(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_XAResource_End
func go_tibems_XAResource_End(resourceHandle C.uintptr_t, h0 C.uintptr_t, p1 int) (C.tibems_status, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	var p0 *XID
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*XID)
	}
	err := resource.End(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_XAResource_GetRMID
func go_tibems_XAResource_GetRMID(resourceHandle C.uintptr_t) (int32, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	r0, err := resource.GetRMID()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_XAResource_GetTransactionTimeout
func go_tibems_XAResource_GetTransactionTimeout(resourceHandle C.uintptr_t) (int32, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	r0, err := resource.GetTransactionTimeout()
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_XAResource_IsSameRM
func go_tibems_XAResource_IsSameRM(resourceHandle C.uintptr_t, h0 C.uintptr_t) (bool, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	var p0 *XAResource
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*XAResource)
	}
	r0, err := resource.IsSameRM(p0)
	status := getStatusFromError(err)
	return r0, status
}

//export go_tibems_XAResource_Prepare
func go_tibems_XAResource_Prepare(resourceHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	var p0 *XID
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*XID)
	}
	err := resource.Prepare(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_XAResource_Recover
func go_tibems_XAResource_Recover(resourceHandle C.uintptr_t, p0 int32, p1 int32) (C.uintptr_t, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	r0, err := resource.Recover(p0, p1)
	status := getStatusFromError(err)
	return C.uintptr_t(cgo.NewHandle(r0)), status
}

//export go_tibems_XAResource_Rollback
func go_tibems_XAResource_Rollback(resourceHandle C.uintptr_t, h0 C.uintptr_t) (C.tibems_status, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	var p0 *XID
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*XID)
	}
	err := resource.Rollback(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_XAResource_SetRMID
func go_tibems_XAResource_SetRMID(resourceHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	err := resource.SetRMID(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_XAResource_SetTransactionTimeout
func go_tibems_XAResource_SetTransactionTimeout(resourceHandle C.uintptr_t, p0 int32) (C.tibems_status, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	err := resource.SetTransactionTimeout(p0)
	status := getStatusFromError(err)
	return 0, status
}

//export go_tibems_XAResource_Start
func go_tibems_XAResource_Start(resourceHandle C.uintptr_t, h0 C.uintptr_t, p1 int) (C.tibems_status, C.tibems_status) {
	resource := cgo.Handle(resourceHandle).Value().(*XAResource)
	var p0 *XID
	if h0 != 0 {
		p0 = cgo.Handle(h0).Value().(*XID)
	}
	err := resource.Start(p0, p1)
	status := getStatusFromError(err)
	return 0, status
}

