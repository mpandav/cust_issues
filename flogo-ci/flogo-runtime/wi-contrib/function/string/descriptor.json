{"name":"string","type":"flogo:function","version":"0.10.0","titile":"","description":"String Functions","homepage":"https://github.com/project-flogo/contrib/tree/master/function/string","functions":[{"args":[{"name":"str1","type":"string"},{"name":"str2","type":"string"},{"name":"str3","type":"string"}],"description":"concatenate a set of string","example":"string.concat(\"Hello\",' ', \"World\") =\u003e Hello World","name":"concat","return":{"type":"string"},"varArgs":true},{"args":[{"name":"str","type":"string"},{"name":"substr","type":"string"}],"description":"Returns whether a string ends with another string.","example":"string.endsWith(\"Project Flogo\", \"Flogo\") =\u003e true","name":"endsWith","return":{"type":"boolean"}},{"args":[{"name":"str1","type":"string"},{"name":"str2","type":"string"}],"description":"check if two strings are equal","example":"string.equals(\"Hello\",\"Hello2\") =\u003e false","name":"equals","return":{"type":"boolean"}},{"args":[{"name":"str1","type":"string"},{"name":"str2","type":"string"}],"description":"check if two strings are equal ignoring case","example":"string.equalsIgnoreCase(\"Hello\",\"hello\") =\u003e true","name":"equalsIgnoreCase","return":{"type":"boolean"}},{"args":[{"name":"str1","type":"string"},{"name":"str2","type":"string"}],"description":"check if str2 is within str1","example":"string.contains(\"foobar\",\"foo\") =\u003e true","name":"contains","return":{"type":"boolean"}},{"args":[{"name":"str1","type":"string"},{"name":"precision","required":false,"type":"number","value":16}],"description":"convert the string to a float","example":"string.float(\"2.77876542316664548335\",14) =\u003e 2.77876542316665","name":"float","return":{"type":"float64"}},{"args":[{"name":"str1","type":"string"}],"description":"convert the string to an integer","example":"string.integer(\"1001\") =\u003e 1001","name":"integer","return":{"type":"int"}},{"args":[{"name":"str1","type":"string"}],"description":"get the length of a string","example":"string.len(\"hello\") =\u003e 5","name":"len","return":{"type":"int"}},{"args":[{"name":"str","type":"string"},{"name":"start","type":"int"},{"name":"end","type":"int"}],"description":"get a substring from a string","example":"string.substring(\"abc\", 1,1) =\u003e b","name":"substring","return":{"type":"string"}},{"args":[{"name":"expression","type":"string"},{"name":"str","type":"string"}],"description":"Match input against regular expression   string.matchRegEx(\"p([a-z]+)ch\", \"peach\")","example":"string.matchRegEx(\"foo.*\", \"Tseafood\") =\u003e true","name":"matchRegEx","return":{"type":"boolean"}},{"args":[{"name":"expression","type":"string"},{"name":"str","type":"string"},{"name":"replace","type":"string"}],"description":"Replace data in a string based on a regular expression match   string.replaceRegEx(\"p([a-z]+)ches\", \" I hate peaches !\", \"apples\")","example":"string.replaceRegEx(\"foo.*\", \"Tseafood\", \"People\") =\u003e TseaPeople","name":"replaceRegEx","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"substr","type":"string"}],"description":"containsAny reports whether any Unicode code points in chars are within inputstring","example":"string.containsAny(\"Tseafood\", \"food\") =\u003e true","name":"containsAny","return":{"type":"boolean"}},{"args":[{"name":"str","type":"string"},{"name":"substr","type":"string"}],"description":"Count counts the number of non-overlapping instances of substring in inputstring. If substring is an empty string, Count returns 1 + the number of Unicode code points in inputstring. string.count(\"cheese\", \"e\")","example":"string.count(\"hello flogo\", \"o\") =\u003e 3","name":"count","return":{"type":"int"}},{"args":[{"name":"str","type":"string"},{"name":"substr","type":"string"}],"description":"Index returns the index of the first instance of substring in inputstring, or -1 if substring is not present in inputstring. string.index(\"cheese\", \"e\")","example":"string.index(\"hello flogo\", \"flogo\") =\u003e 6","name":"index","return":{"type":"int"}},{"args":[{"name":"str","type":"string"},{"name":"substr","type":"string"}],"description":"indexAny returns the index of the first instance of any Unicode code point from chars in inputstring, or -1 if no Unicode code point from chars is present in inputstring. string.indexAny(\"chicken\", \"aeiouy\")","example":"string.indexAny(\"hello flogo\", \"flogo\") =\u003e 2","name":"indexAny","return":{"type":"int"}},{"args":[{"name":"items","type":"array","valueType":"any"},{"name":"separator","type":"string"}],"description":"Converts an array to its string representation and concatenates its elements using the specified separator between each element","example":"string.join(array.create(\"a\", \"b\"), \"-\") =\u003e a-b","name":"join","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"substr","type":"string"}],"description":"LastIndex returns the index of the last instance of substring in inputstring, or -1 if substring is not present in inputstring. string.lastIndex(\"go gopher\", \"go\")","example":"string.lastIndex(\"hello flogo\", \"flogo\") =\u003e 6","name":"lastIndex","return":{"type":"int"}},{"args":[{"name":"str","type":"string"},{"name":"count","type":"int"}],"description":"Repeat returns a new string consisting of count copies of the string s. string.repeat(\"na\", 3)","example":"string.repeat(\"hello flogo\", 2) =\u003e hello flogohello flogo","name":"repeat","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"old","type":"string"},{"name":"new","type":"string"},{"name":"count","type":"int"}],"description":"Replace returns a copy of inputstring with the first count non-overlapping instances of old replaced by new.  If count \u003c 0, there is no limit on the number of replacements  string.replace(\"oink oink oink\", \"k\", \"ky\", 2)","example":"string.replace(\"hello flogo\", \"flogo\", \"world\", -1) =\u003e hello world","name":"replace","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"old","type":"string"},{"name":"new","type":"string"}],"description":"replaceAll returns a copy of inputstring with all non-overlapping instances of old replaced by new.  string.replaceAll(\"oink oink oink\", \"oink\", \"moo\")","example":"string.replaceAll(\"hello flogo\", \"flogo\", \"world\") =\u003e hello world","name":"replaceAll","return":{"type":"string"}},{"args":[{"name":"str","type":"string"}],"description":"returns the string to capitalize the first letter of every word","example":"string.toTitleCase(\"hello world\") =\u003e Hello World","name":"toTitleCase","return":{"type":"string"}},{"args":[{"name":"str","type":"string"}],"description":"toLower returns a copy of inputstring with all Unicode letters mapped to their lower case.  ","example":"string.toLower(\"Hello World\") =\u003e hello world","name":"toLower","return":{"type":"string"}},{"args":[{"name":"str","type":"string"}],"description":"toUpper returns a copy of inputstring with all Unicode letters mapped to their upper case.","example":"string.toUpper(\"Hello World\") =\u003e HELLO WORLD","name":"toUpper","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"cutset","required":false,"type":"string"}],"description":"Trim returns a slice of inputstring with all leading and trailing Unicode code points contained in cutset removed. string.trim(\"¡¡¡Hello, Gophers!!!\", \"!¡\")","example":"string.trim(\" Hello World \", \" \") =\u003e Hello World","name":"trim","return":{"type":"string"},"varArgs":true},{"args":[{"name":"str","type":"string"},{"name":"cutset","type":"string"}],"description":"trimLeft returns a slice of inputstring with all leading Unicode code points contained in cutset removed. string.trimLeft(\"¡¡¡Hello, Gophers!!!\", \"!¡\")","example":"string.trimLeft(\" Hello World \", \" \") =\u003e Hello World ","name":"trimLeft","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"cutset","type":"string"}],"description":"trimRight returns a slice of inputstring with all trailing Unicode code points contained in cutset removed. string.trimRight(\"¡¡¡Hello, Gophers!!!\", \"!¡\")","example":"string.trimRight(\" Hello World \", \" \") =\u003e  Hello World","name":"trimRight","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"prefix","type":"string"}],"description":"trimPrefix returns inputstring without the provided leading prefix string. If inputstring doesn't start with prefix, it is returned unchanged. string.trimPrefix(\"¡¡¡Hello, Gophers!!!\", \"¡¡¡Hello\")","example":"string.trimPrefix(\"Hello World \", \"Hello\") =\u003e  World","name":"trimPrefix","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"suffix","type":"string"}],"description":"TrimSuffix returns inputstring without the provided trailing suffix string. If it doesn't end with suffix, it is returned unchanged. string.trimSuffix(\"¡¡¡Hello, Gophers!!!\", \"Gophers!!!\")","example":"string.trimSuffix(\"Hello World\", \"World\") =\u003e  Hello","name":"trimSuffix","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"sep","type":"string"}],"description":"Split slices s into all substrings separated by sep and returns a slice of the substrings between those separators. string.split(\"a,b,c\", \",\")","example":"string.split(\"Hello,World\", \",\") =\u003e  [Hello,World]","name":"split","return":{"type":"array","valueType":"string"}},{"args":[{"name":"str","type":"string"},{"name":"substr","type":"string"}],"description":"Returns whether a string begins with another string.","example":"string.startsWith(\"Project Flogo\", \"Project\") =\u003e true","name":"startsWith","return":{"type":"boolean"}},{"args":[{"name":"str","type":"string"},{"name":"afterstr","type":"string"}],"description":"Returns the string that follows after the first occurrence of the second string, or a zero length string if the first string does not contain the second string.","example":"string.substringAfter(\"1999/04/01\", \"/\") =\u003e 04/01","name":"substringAfter","return":{"type":"string"}},{"args":[{"name":"str","type":"string"},{"name":"beforestr","type":"string"}],"description":"Returns the string that follows before the first occurrence of the second string, or a zero length string if the first string does not contain the second string.","example":"string.substringBefore(\"1999/04/01\", \"/\") =\u003e 1999","name":"substringBefore","return":{"type":"string"}},{"args":[{"name":"base64str","type":"string"}],"description":"Decodes a base64 encoded string base64str and returns the decoded string.","display":{"deprecated":"utils.decodeBase64()","visible":true},"example":"string.base64ToString(\"SGVsbG8sIFdvcmxk\") =\u003e Hello, World","name":"base64ToString","return":{"type":"string"}},{"args":[],"description":"Returns a default date format.","display":{"deprecated":"YYYY-MM-DD","visible":true},"example":"string.dateFormat() =\u003e 2006-01-02-07:00","name":"dateFormat","return":{"type":"string"}},{"args":[],"description":"Returns a default datetime format.","display":{"deprecated":"YYYY-MM-DDTHH:mm:ss","visible":true},"example":"string.datetimeFormat() =\u003e 2006-01-02T15:04:05-07:00","name":"datetimeFormat","return":{"type":"string"}},{"args":[{"name":"str","type":"string"}],"description":"Returns the string in lowercase.","display":{"deprecated":"string.toLower","visible":true},"example":"string.lowerCase(\"FLOGO\") =\u003e flogo","name":"lowerCase","return":{"type":"string"}},{"args":[{"name":"pattern","type":"string"},{"name":"str","type":"string"}],"description":"Checks whether a regular expression pattern matches a string.","display":{"deprecated":"string.matchRegEx","visible":true},"example":"string.regex(\"foo.*\", \"seafood\") =\u003e true","name":"regex","return":{"type":"boolean"}},{"args":[{"name":"str","type":"string"}],"description":"Returns the length of a string.","display":{"deprecated":"string.len","visible":true},"example":"string.length(\"FLOGO\") =\u003e 5","name":"length","return":{"type":"integer"}},{"args":[{"name":"str","type":"string"}],"description":"Returns a base64 encoded string of the input.","display":{"deprecated":"utils.encodeBase64()","visible":true},"example":"string.stringToBase64(\"Hello, World\") =\u003e SGVsbG8sIFdvcmxk","name":"stringToBase64","return":{"type":"string"}},{"args":[],"description":"Returns a default timeformat.","display":{"deprecated":"HH-mm-ss","visible":true},"example":"string.timeFormat() =\u003e 15:04:05-07:00","name":"timeFormat","return":{"type":"string"}},{"args":[{"name":"input","type":"any"}],"description":"Converts an object to a string.","display":{"deprecated":"coerce.toString","visible":true},"example":"string.tostring(123) =\u003e \"123\"","name":"tostring","return":{"type":"string"}},{"args":[{"name":"str","type":"string"}],"description":"Returns the string in uppercase.","display":{"deprecated":"string.toUpper","visible":true},"example":"string.upperCase(\"Flogo\") =\u003e FLOGO","name":"upperCase","return":{"type":"string"}}]}